/* DO NOT EDIT THIS FILE - it is machine generated */
#include <native.h>

#ifndef _Included_java_lang_ProcessReaper
#define _Included_java_lang_ProcessReaper

#ifdef __cplusplus
extern "C" {
#endif

/* Header for class java_lang_ProcessReaper */

typedef struct Classjava_lang_ProcessReaper {
  HArrayOfChar* name;
  jint priority;
  struct Hjava_lang_Thread* threadQ;
  jint PrivateInfo;
  jint eetop;
  jint /* bool */ single_step;
  jint /* bool */ daemon;
  jint /* bool */ stillborn;
  struct Hjava_lang_Runnable* target;
  jint /* bool */ interruptRequested;
  struct Hjava_lang_ThreadGroup* group;
#define java_lang_ProcessReaper_MIN_PRIORITY 1
#define java_lang_ProcessReaper_NORM_PRIORITY 5
#define java_lang_ProcessReaper_MAX_PRIORITY 10
} Classjava_lang_ProcessReaper;
HandleTo(java_lang_ProcessReaper);

extern void java_lang_ProcessReaper_waitForDeath(struct Hjava_lang_ProcessReaper*);

#ifdef __cplusplus
}
#endif

#endif
