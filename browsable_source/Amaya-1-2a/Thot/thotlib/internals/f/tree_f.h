/*
 *   This file was automatically generated by version 1.7 of cextract.
 *   Manual editing not recommended.
 */

#ifndef __CEXTRACT__
#ifdef __STDC__

extern PtrDocument DocumentOfElement ( PtrElement pEl );
extern void ProtectElement ( PtrElement pEl );
extern PtrElement GetOtherPairedElement ( PtrElement pEl );
extern boolean ElementIsHidden ( PtrElement pEl );
extern boolean ElementIsReadOnly ( PtrElement pEl );
extern boolean CannotInsertNearElement ( PtrElement pEl,
                                         boolean beforeElement );
extern PtrElement FwdSearchElemByTypeName ( PtrElement pEl,
                                            char *typeName );
extern PtrElement BackSearchElemByTypeName ( PtrElement pEl,
                                             char *typeName );
extern PtrElement FwdSearchRefOrEmptyElem ( PtrElement pEl,
                                            int Kind );
extern PtrElement BackSearchRefOrEmptyElem ( PtrElement pEl,
                                             boolean Kind );
extern void ChangeLanguageLeaves ( PtrElement pEl,
                                   Language lang );
extern void InsertElemAfterLastSibling ( PtrElement pOld,
                                         PtrElement pNew );
extern boolean ElemIsWithinSubtree ( PtrElement pEl,
                                     PtrElement pRoot );
extern boolean EquivalentType ( PtrElement pEl,
                                int typeNum,
                                PtrSSchema pSS );
extern boolean ElemIsBefore ( PtrElement pEl1,
                              PtrElement pEl2 );
extern boolean ElemIsAnAncestor ( PtrElement pEl1,
                                  PtrElement pEl2 );
extern PtrElement CommonAncestor ( PtrElement pEl1,
                                   PtrElement pEl2 );
extern PtrElement FirstLeaf ( PtrElement pEl );
extern PtrElement LastLeaf ( PtrElement pRoot );
extern PtrElement GetTypedAncestor ( PtrElement pEl,
                                     int typeNum,
                                     PtrSSchema pSS );
extern PtrElement FwdSearchElem2Types ( PtrElement pEl,
                                        int typeNum1,
                                        int typeNum2,
                                        PtrSSchema pSS1,
                                        PtrSSchema pSS2 );
extern PtrElement FwdSearchTypedElem ( PtrElement pEl,
                                       int typeNum,
                                       PtrSSchema pSS );
extern PtrElement BackSearchElem2Types ( PtrElement pEl,
                                         int typeNum1,
                                         int typeNum2,
                                         PtrSSchema pSS1,
                                         PtrSSchema pSS2 );
extern PtrElement BackSearchTypedElem ( PtrElement pEl,
                                        int typeNum,
                                        PtrSSchema pSS );
extern PtrElement BackSearchVisibleElem ( PtrElement pRoot,
                                          PtrElement pEl,
                                          int view );
extern PtrElement FwdSearchAttribute ( PtrElement pEl,
                                       int attrNum,
                                       int val,
                                       char *textVal,
                                       PtrSSchema pSS );
extern PtrElement BackSearchAttribute ( PtrElement pEl,
                                        int attNum,
                                        int val,
                                        char *textVal,
                                        PtrSSchema pSS );
extern void FwdSkipPageBreak ( PtrElement * pEl );
extern void FwdSkipPageBreakAndExtension ( PtrElement * pEl );
extern void SkipPageBreakBegin ( PtrElement * pEl );
extern void BackSkipPageBreak ( PtrElement * pEl );
extern PtrElement NextElement ( PtrElement pEl );
extern PtrElement PreviousLeaf ( PtrElement pEl );
extern PtrElement NextLeaf ( PtrElement pEl );
extern void InsertElementBefore ( PtrElement pOld,
                                  PtrElement pNew );
extern void InsertElementAfter ( PtrElement pOld,
                                 PtrElement pNew );
extern void InsertFirstChild ( PtrElement pOld,
                               PtrElement pNew );
extern void InsertElemInChoice ( PtrElement pEl,
                                 PtrElement * pNew,
                                 boolean del );
extern void AttachRequiredAttributes ( PtrElement pEl,
                                       SRule * pSRule,
                                       PtrSSchema pSS,
                                       boolean withAttr,
                                       PtrDocument pDoc );
extern PtrElement NewSubtree ( int typeNum,
                               PtrSSchema pSS,
                               PtrDocument pDoc,
                               int assocNum,
                               boolean Desc,
                               boolean Root,
                               boolean withAttr,
                               boolean withLabel );
extern void RemoveExcludedElem ( PtrElement * pEl );
extern void RemoveElement ( PtrElement pEl );
extern void RemoveAttribute ( PtrElement pEl,
                              PtrAttribute pAttr );
extern void DeleteAttribute ( PtrElement pEl,
                              PtrAttribute pAttr );
extern void DeleteElement ( PtrElement * pEl );
extern PtrElement CopyTree ( PtrElement pSource,
                             PtrDocument pDocSource,
                             int assocNum,
                             PtrSSchema pSSchema,
                             PtrDocument pDocCopy,
                             PtrElement pParent,
                             boolean checkAttr,
                             boolean shareRef );
extern PtrElement FirstAssociatedElement ( PtrDocument pDoc,
                                           int typeNum,
                                           PtrSSchema pSS );
extern void CopyIncludedElem ( PtrElement pEl,
                               PtrDocument pDoc );
extern PtrElement ReplicateElement ( PtrElement pEl,
                                     PtrDocument pDoc );
extern PtrAttribute GetTypedAttrForElem ( PtrElement pEl,
                                          int attrNum,
                                          PtrSSchema pSSattr );
extern PtrAttribute GetTypedAttrAncestor ( PtrElement pEl,
                                           int attrNum,
                                           PtrSSchema pSSattr,
                                           PtrElement * pElAttr );
extern void CheckLanguageAttr ( PtrDocument pDoc,
                                PtrElement pEl );

#else /* __STDC__ */

extern PtrDocument DocumentOfElement (/* PtrElement pEl */);
extern void ProtectElement (/* PtrElement pEl */);
extern PtrElement GetOtherPairedElement (/* PtrElement pEl */);
extern boolean ElementIsHidden (/* PtrElement pEl */);
extern boolean ElementIsReadOnly (/* PtrElement pEl */);
extern boolean CannotInsertNearElement (/* PtrElement pEl,
                                           boolean beforeElement */);
extern PtrElement FwdSearchElemByTypeName (/* PtrElement pEl,
                                              char *typeName */);
extern PtrElement BackSearchElemByTypeName (/* PtrElement pEl,
                                               char *typeName */);
extern PtrElement FwdSearchRefOrEmptyElem (/* PtrElement pEl,
                                              int Kind */);
extern PtrElement BackSearchRefOrEmptyElem (/* PtrElement pEl,
                                               boolean Kind */);
extern void ChangeLanguageLeaves (/* PtrElement pEl,
                                     Language lang */);
extern void InsertElemAfterLastSibling (/* PtrElement pOld,
                                           PtrElement pNew */);
extern boolean ElemIsWithinSubtree (/* PtrElement pEl,
                                       PtrElement pRoot */);
extern boolean EquivalentType (/* PtrElement pEl,
                                  int typeNum,
                                  PtrSSchema pSS */);
extern boolean ElemIsBefore (/* PtrElement pEl1,
                                PtrElement pEl2 */);
extern boolean ElemIsAnAncestor (/* PtrElement pEl1,
                                    PtrElement pEl2 */);
extern PtrElement CommonAncestor (/* PtrElement pEl1,
                                     PtrElement pEl2 */);
extern PtrElement FirstLeaf (/* PtrElement pEl */);
extern PtrElement LastLeaf (/* PtrElement pRoot */);
extern PtrElement GetTypedAncestor (/* PtrElement pEl,
                                       int typeNum,
                                       PtrSSchema pSS */);
extern PtrElement FwdSearchElem2Types (/* PtrElement pEl,
                                          int typeNum1,
                                          int typeNum2,
                                          PtrSSchema pSS1,
                                          PtrSSchema pSS2 */);
extern PtrElement FwdSearchTypedElem (/* PtrElement pEl,
                                         int typeNum,
                                         PtrSSchema pSS */);
extern PtrElement BackSearchElem2Types (/* PtrElement pEl,
                                           int typeNum1,
                                           int typeNum2,
                                           PtrSSchema pSS1,
                                           PtrSSchema pSS2 */);
extern PtrElement BackSearchTypedElem (/* PtrElement pEl,
                                          int typeNum,
                                          PtrSSchema pSS */);
extern PtrElement BackSearchVisibleElem (/* PtrElement pRoot,
                                            PtrElement pEl,
                                            int view */);
extern PtrElement FwdSearchAttribute (/* PtrElement pEl,
                                         int attrNum,
                                         int val,
                                         char *textVal,
                                         PtrSSchema pSS */);
extern PtrElement BackSearchAttribute (/* PtrElement pEl,
                                          int attNum,
                                          int val,
                                          char *textVal,
                                          PtrSSchema pSS */);
extern void FwdSkipPageBreak (/* PtrElement * pEl */);
extern void FwdSkipPageBreakAndExtension (/* PtrElement * pEl */);
extern void SkipPageBreakBegin (/* PtrElement * pEl */);
extern void BackSkipPageBreak (/* PtrElement * pEl */);
extern PtrElement NextElement (/* PtrElement pEl */);
extern PtrElement PreviousLeaf (/* PtrElement pEl */);
extern PtrElement NextLeaf (/* PtrElement pEl */);
extern void InsertElementBefore (/* PtrElement pOld,
                                    PtrElement pNew */);
extern void InsertElementAfter (/* PtrElement pOld,
                                   PtrElement pNew */);
extern void InsertFirstChild (/* PtrElement pOld,
                                 PtrElement pNew */);
extern void InsertElemInChoice (/* PtrElement pEl,
                                   PtrElement * pNew,
                                   boolean del */);
extern void AttachRequiredAttributes (/* PtrElement pEl,
                                         SRule * pSRule,
                                         PtrSSchema pSS,
                                         boolean withAttr,
                                         PtrDocument pDoc */);
extern PtrElement NewSubtree (/* int typeNum,
                                 PtrSSchema pSS,
                                 PtrDocument pDoc,
                                 int assocNum,
                                 boolean Desc,
                                 boolean Root,
                                 boolean withAttr,
                                 boolean withLabel */);
extern void RemoveExcludedElem (/* PtrElement * pEl */);
extern void RemoveElement (/* PtrElement pEl */);
extern void RemoveAttribute (/* PtrElement pEl,
                                PtrAttribute pAttr */);
extern void DeleteAttribute (/* PtrElement pEl,
                                PtrAttribute pAttr */);
extern void DeleteElement (/* PtrElement * pEl */);
extern PtrElement CopyTree (/* PtrElement pSource,
                               PtrDocument pDocSource,
                               int assocNum,
                               PtrSSchema pSSchema,
                               PtrDocument pDocCopy,
                               PtrElement pParent,
                               boolean checkAttr,
                               boolean shareRef */);
extern PtrElement FirstAssociatedElement (/* PtrDocument pDoc,
                                             int typeNum,
                                             PtrSSchema pSS */);
extern void CopyIncludedElem (/* PtrElement pEl,
                                 PtrDocument pDoc */);
extern PtrElement ReplicateElement (/* PtrElement pEl,
                                       PtrDocument pDoc */);
extern PtrAttribute GetTypedAttrForElem (/* PtrElement pEl,
                                            int attrNum,
                                            PtrSSchema pSSattr */);
extern PtrAttribute GetTypedAttrAncestor (/* PtrElement pEl,
                                             int attrNum,
                                             PtrSSchema pSSattr,
                                             PtrElement * pElAttr */);
extern void CheckLanguageAttr (/* PtrDocument pDoc,
                                  PtrElement pEl */);

#endif /* __STDC__ */
#endif /* __CEXTRACT__ */
