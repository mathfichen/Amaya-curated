/*
 *   This file was automatically generated by version 1.7 of cextract.
 *   Manual editing not recommended.
 */

#ifndef __CEXTRACT__
#ifdef __STDC__

extern char *TtaGetLanguageNameFromCode ( char *code );
extern char *TtaGetLanguageCodeFromName ( char *name );
extern void InitLanguage ( void );
extern Language TtaNewLanguage ( char *languageName,
                                 char languageAlphabet,
                                 char *principalDictionary,
                                 char *secondDictionary );
extern void TtaRemoveLanguage ( Language language );
extern Language TtaGetLanguageIdFromName ( char *languageName );
extern char *TtaGetVarLANG ( void );
extern Language TtaGetDefaultLanguage ( void );
extern Language TtaGetLanguageIdFromAlphabet ( char languageAlphabet );
extern char TtaGetAlphabet ( Language languageId );
extern char *TtaGetLanguageName ( Language languageId );
extern char *TtaGetLanguageCode ( Language languageId );
extern int TtaGetNumberOfLanguages ( void );
extern int TtaGetFirstUserLanguage ( void );
extern boolean GetPatternList ( Language langageId );
extern int *TtaGetPatternHyphenList ( char word[THOT_MAX_CHAR],
                                      Language languageId );
extern boolean TtaExistPatternList ( Language languageId );

#else /* __STDC__ */

extern char *TtaGetLanguageNameFromCode (/* char *code */);
extern char *TtaGetLanguageCodeFromName (/* char *name */);
extern void InitLanguage (/* void */);
extern Language TtaNewLanguage (/* char *languageName,
                                   char languageAlphabet,
                                   char *principalDictionary,
                                   char *secondDictionary */);
extern void TtaRemoveLanguage (/* Language language */);
extern Language TtaGetLanguageIdFromName (/* char *languageName */);
extern char *TtaGetVarLANG (/* void */);
extern Language TtaGetDefaultLanguage (/* void */);
extern Language TtaGetLanguageIdFromAlphabet (/* char languageAlphabet */);
extern char TtaGetAlphabet (/* Language languageId */);
extern char *TtaGetLanguageName (/* Language languageId */);
extern char *TtaGetLanguageCode (/* Language languageId */);
extern int TtaGetNumberOfLanguages (/* void */);
extern int TtaGetFirstUserLanguage (/* void */);
extern boolean GetPatternList (/* Language langageId */);
extern int *TtaGetPatternHyphenList (/* char word[THOT_MAX_CHAR],
                                        Language languageId */);
extern boolean TtaExistPatternList (/* Language languageId */);

#endif /* __STDC__ */
#endif /* __CEXTRACT__ */
