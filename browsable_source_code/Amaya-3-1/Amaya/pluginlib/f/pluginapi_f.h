/*
 *   This file was automatically generated by version 1.7 of cextract.
 *   Manual editing not recommended.
 */

#ifndef __CEXTRACT__
#ifdef __STDC__

extern void* Ap_MemAlloc ( uint32 size );
extern uint32 Ap_MemFlush ( uint32 size );
extern void Ap_MemFree ( void* ptr );
extern void Ap_FreePicture ( PictInfo* imageDesc );
extern NPError Ap_DestroyStream ( NPP instance,
                                  NPStream* stream,
                                  NPError reason );
extern JRIEnv* Ap_GetJavaEnv ( void );
extern jref Ap_GetJavaPeer ( NPP instance );
extern void Ap_URLNotify ( NPP instance,
                           const char* url,
                           NPReason reason,
                           void* notifyData );
extern NPError Ap_GetURL ( NPP instance,
                           const char* url,
                           const char* target );
extern NPError Ap_GetURLNotify ( NPP instance,
                                 const char* url,
                                 const char *target,
                                 void* notifyData );
extern NPError Ap_NewStream ( NPP instance,
                              NPMIMEType type,
                              const char *window,
                              NPStream **stream_ptr );
extern NPError Ap_PostURL ( NPP instance,
                            const char* url,
                            const char* target,
                            uint32 len,
                            const char* buf,
                            NPBool file );
extern NPError Ap_PostURLNotify ( NPP instance,
                                  const char* url,
                                  const char* target,
                                  uint32 len,
                                  const char* buf,
                                  NPBool file,
                                  void* notifyData );
extern NPError Ap_RequestRead ( NPStream* stream,
                                NPByteRange* rangeList );
extern void Ap_Status ( NPP instance,
                        const char* message );
extern const char* Ap_UserAgent ( NPP instance );
extern int32 Ap_Write ( NPP instance,
                        NPStream* stream,
                        int32 len,
                        void* buffer );
extern void Ap_Version ( int* plugin_major,
                         int* plugin_minor,
                         int* amaya_major,
                         int* amaya_minor );
extern void Ap_ReloadPlugins ( NPBool reloadPages );
extern void Ap_InitializeAmayaTable ( void );
extern void Ap_InitializePluginTable ( int indexHandler );
extern int Ap_InitializePlugin ( char* path,
                                 int indexHandler );
extern void Ap_CreatePluginInstance ( PtrBox box,
                                      PictInfo *imageDesc,
                                      Display *display,
                                      int type );

#else /* __STDC__ */

extern void* Ap_MemAlloc (/* uint32 size */);
extern uint32 Ap_MemFlush (/* uint32 size */);
extern void Ap_MemFree (/* void* ptr */);
extern void Ap_FreePicture (/* PictInfo* imageDesc */);
extern NPError Ap_DestroyStream (/* NPP instance,
                                    NPStream* stream,
                                    NPError reason */);
extern JRIEnv* Ap_GetJavaEnv (/* void */);
extern jref Ap_GetJavaPeer (/* NPP instance */);
extern void Ap_URLNotify (/* NPP instance,
                             const char* url,
                             NPReason reason,
                             void* notifyData */);
extern NPError Ap_GetURL (/* NPP instance,
                             const char* url,
                             const char* target */);
extern NPError Ap_GetURLNotify (/* NPP instance,
                                   const char* url,
                                   const char *target,
                                   void* notifyData */);
extern NPError Ap_NewStream (/* NPP instance,
                                NPMIMEType type,
                                const char *window,
                                NPStream **stream_ptr */);
extern NPError Ap_PostURL (/* NPP instance,
                              const char* url,
                              const char* target,
                              uint32 len,
                              const char* buf,
                              NPBool file */);
extern NPError Ap_PostURLNotify (/* NPP instance,
                                    const char* url,
                                    const char* target,
                                    uint32 len,
                                    const char* buf,
                                    NPBool file,
                                    void* notifyData */);
extern NPError Ap_RequestRead (/* NPStream* stream,
                                  NPByteRange* rangeList */);
extern void Ap_Status (/* NPP instance,
                          const char* message */);
extern const char* Ap_UserAgent (/* NPP instance */);
extern int32 Ap_Write (/* NPP instance,
                          NPStream* stream,
                          int32 len,
                          void* buffer */);
extern void Ap_Version (/* int* plugin_major,
                           int* plugin_minor,
                           int* amaya_major,
                           int* amaya_minor */);
extern void Ap_ReloadPlugins (/* NPBool reloadPages */);
extern void Ap_InitializeAmayaTable (/* void */);
extern void Ap_InitializePluginTable (/* int indexHandler */);
extern int Ap_InitializePlugin (/* char* path,
                                   int indexHandler */);
extern void Ap_CreatePluginInstance (/* PtrBox box,
                                        PictInfo *imageDesc,
                                        Display *display,
                                        int type */);

#endif /* __STDC__ */
#endif /* __CEXTRACT__ */
