            BISS-AWT - a Java GUI application programming framework
            =======================================================


What is BISS-AWT
----------------

BISS-AWT is a java framework of about 150 Java classes for building
graphical applications with state-of-the-art user interfaces.  Instead of
following the native lib based, "OS-native" look-and-feel (like Suns java.awt),
it is implemented purely in Jave and has its own "Java-native" look-and-feel.

The framework can be extended without native library support (i.e. you can
write your specialized versions of TextAreas, Checkboxes, Lists etc. without
being forced to write your own, non-portable, native libraries).

It already has nice things like text editors, pop-up menus, notebooks,
hierarchical Lists etc. without the need for a JDK 1.1 compliant native lib.
The cross platform compatibility has been tested on a variety of different
operating systems (Linux, BSD, NextStep, OS/2, Windows 95, ..).

Besides being useful as an add-on library for all standard Java AWT
implementations, it can be used to build an own, stand-alone AWT that
requires just minimal native library support. This distribution comes with
a native layer for the kaffe-0.8.1 virtual machine.

As a proof-of-concept, there are also some tools included which form a
Java specific IDE (integrated development environment, ClassBrowser etc.).
These tools already can be used to do serious Java programming (BISS-AWT
itself has been built with it). There even is a graphical layout generator
which considerably eases the effort required to design complex dialogs).

The BISS-AWT comes with full sources (both Java and for the optional
native library) and is distributed under a GPL-like license (please see
file LICENSE.BISS_AWT for details). It is a vivid project which will be
constantly improved (with respect to both the GUI and the IDE components).


Prerequisites
-------------

Depends on what you are doing with biss.awt. For usage of biss.awt as
an add-on GUI toolkit for arbitrary Java implementations, you just have
to know about it concepts (see included documentation) and your favorite
Java implementation.

If you are interested in the biss.awt.kernel and native lib, you should
know about general Unix programming. And, of course,  you have to install
kaffe.

In its current stage, the native lib build process is not very sophisticated
which means there just is one simple makefile (no imake or autoconf used yet).
But it also does not have to be because the native layer consists just of six
simple *.c files.

If you want to use the biss.awt.kernel native layer, you first have to get
the current kaffe version (>= 0.8.1, e.g. from ftp://ftp.sarc.city.ac.uk).

Beginning with version 0.87, the biss-awt distribution is divided into three
parts:

- biss-awt-src.tar.gz : complete source tree
- biss-awt-bin.tar.gz : pre-build class files
- biss-awt-doc.tar.gz : documentation sources (lyx file and eps figures)

The biss-awt-bin part is now optional (you can rebuild all class files and
the shared lib from biss-awt-src). The native lib *always* has to be re-built,
the object files and the shared lib is *not* included in the bin package.

If you just want to read the postscript documentation, you don't have to get
the whole documentation package. A gzipped postscript file (with A4 paper format)
is available within the ftp directory. If you just need another paper
format, use ghostviews media convert functions (yes it works, but on mouse
button 2).


Contents
--------

This distribution contains the following packages:

biss
    Some general helper classes (StringLib, FileLib etc.) needed by the other
    biss packages

biss.awt
    The main body. This is the GUI application framework that can be used
    either as an add-on for arbitrary Java implementations, or as a peer
    layer for an own AWT implementation

biss.awt.kernel
    This is the kernel support layer (with generic peers) to build an
    autark AWT. It also includes a small native library that can be used
    with the kaffe-0.8.1 virtual machine

biss.jde
    Contains a lot of useful programming tools for Java application
    development. Among them are the LibBrowser, the CUBrowser (short
    for CompileUnitBrowser), the Designer (a graphical Layout generator)
    etc.

biss.calendar
    Another extended example of how to use the biss.awt. This is a
    small, but real-life calendar / planer application


External packages included in this archive
------------------------------------------

There are two external packages included which have not been developed
by biss:

PSGr :  postscript printing package written by E.J.Friedman-Hill
        (http://herzberg.ca.sandia.gov)
	
JAS  :  Java bytecode assembler written by K.B.Sriram
        (http://www.blackdown.org/~kbs/jas.html)

BISS holds absolutely no rights on these packages, they are just included
for convenience reasons. Anyway, we would like to thank the authors for
their great work.


Where to find more documentation
--------------------------------

!! If you upgrade from a previous version, we strongly urge that you read the
!! (detailed) ~/biss/CHANGES file. Each version is described with three sections:

- bugs                    : list of major fixes
- other changes           : added functions etc.
- interface modifications : changes which have an effect on existing sources

If you already have sources based on biss-awt, you should at least read the
last section since you may have to adapt some of your classes (something
we try to keep at an minimum).

Please also check the ~/biss/INSTALL file.

There is a slowly, but steadily growing documentation which can be found
in directory ~/biss/doc. The postscript file can also be accessed
separately from ftp://ftp.biss-net.com/pub/biss-awt/biss-awt.ps.gz


Web and FTP sites
-----------------

primary site:

ftp://ftp.biss-net.com/pub/biss-awt
http://www.biss-net.com/biss-awt.html

there is a US mirror at

ftp://ftp.cs.arizona.edu/xkernel/biss-awt


Mailing list
------------

<biss-awt@knollo.biss-net.com>

To subscribe, either send a message with the single subject "subscribe" or
a message with the body "subscribe biss-awt" to
<biss-awt-request@knollo.biss-net.com>

To unsubscribe, please exchange "subscribe" by "unsubscribe" in the above
procedure.


How to contact us
-----------------

You can reach the creators of BISS-AWT via email

Peter Mehlitz  <pcm@biss-net.com>
Joerg Mehlitz  <jhm@biss-net.com>

If you want to discuss licensing matters or other administrative stuff,
please send mail to

Jan Mazac      <jwm@biss-net.com>

Fax:   +49 4423 928999
Phone: +49 4423 92890





