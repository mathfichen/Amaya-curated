	{ Presentation Schema for MathML.

	  I. Vatton			June 1997	}


PRESENTATION MathML;

VIEWS
   Formatted_view, Math_Structure_view;

#define OPERATOR_SPACE 0.27
#define ROOT_OFFSET 0.6
#define STRUCT_INDENT 1.5
#define TAG_FONTSIZE 12 pt
#define DOC_FONTSIZE 12 pt
#define TAG_Style Roman
#define TAG_Weight Normal
#define TAG_Visibility 7
#define ATTR_Style Roman
#define ATTR_Weight Normal
#define ATTR_Visibility 7

#ifdef BLACK_WHITE
#define TAG_Color Black
#define ATTR_Color Black
#define ATTRVALUE_Color Black
#else
#define TAG_Color Blue
#define ATTR_Color Blue
#define ATTRVALUE_Color Black
#endif

#define TAG_Font Helvetica
#define ATTR_Font Helvetica

DEFAULT

   BEGIN
   Visibility: Enclosing =;
   VertRef: * . Left ;
   HorizRef: Enclosed . HRef;
   Height: Enclosed . Height;
   Width: Enclosed . Width;
   VertPos: HRef = Previous . HRef;
   HorizPos: Left = Previous . Right;
   LineBreak: No;
   Font: Enclosing =;
   Style: Enclosing =;
   Weight: Enclosing =;
   Size: Enclosing =;
   Indent: 0;
   Justify: No;
   Adjust: Left;
   LineSpacing: 1;
   Depth : Enclosing =;
   UnderLine: Enclosing =;
   Thickness: Enclosing =;
   LineStyle: Enclosing =;
   LineWeight: Enclosing =;
   Background: Enclosing =;
   Foreground: Enclosing =;
   FillPattern: Enclosing =;
   IN Math_Structure_view BEGIN
	VertPos: Top = Previous . Bottom;
	HorizPos: Left = Enclosing . Left;
	END;
   END;

BOXES

 MROW_S: BEGIN
	Content: Text 'mrow';
	Visibility: 0;
	IN Math_Structure_view BEGIN
		Size: TAG_FONTSIZE;
		Font: TAG_Font;
		Style: TAG_Style; Weight: TAG_Weight;
		Visibility: TAG_Visibility;  Foreground: TAG_Color;
		END;
	END;

 MSQRT_S: BEGIN
	Content: Text 'msqrt';
	Visibility: 0;
	IN Math_Structure_view BEGIN
		Size: TAG_FONTSIZE;
		Font: TAG_Font;
		Style: TAG_Style; Weight: TAG_Weight;
		Visibility: TAG_Visibility;  Foreground: TAG_Color;
		END;
	END;

 MENCLOSE_S: BEGIN
	Content: Text 'menclose';
	Visibility: 0;
	IN Math_Structure_view BEGIN
		Size: TAG_FONTSIZE;
		Font: TAG_Font;
		Style: TAG_Style; Weight: TAG_Weight;
		Visibility: TAG_Visibility;  Foreground: TAG_Color;
		END;
	END;

 MROOT_S: BEGIN
	Content: Text 'mroot';
	Visibility: 0;
	IN Math_Structure_view BEGIN
		Size: TAG_FONTSIZE;
		Font: TAG_Font;
		Style: TAG_Style; Weight: TAG_Weight;
		Visibility: TAG_Visibility;  Foreground: TAG_Color;
		END;
	END;

 MFRAC_S: BEGIN
	Content: Text 'mfrac';
	Visibility: 0;
	IN Math_Structure_view BEGIN
		Size: TAG_FONTSIZE;
		Font: TAG_Font;
		Style: TAG_Style; Weight: TAG_Weight;
		Visibility: TAG_Visibility;  Foreground: TAG_Color;
		END;
	END;

 MFENCED_S: BEGIN
	Content: Text 'mfenced';
	Visibility: 0;
	IN Math_Structure_view BEGIN
		Size: TAG_FONTSIZE;
		Font: TAG_Font;
		Style: TAG_Style; Weight: TAG_Weight;
		Visibility: TAG_Visibility;  Foreground: TAG_Color;
		END;
	END;

 MSUBSUP_S: BEGIN
	Content: Text 'msubsup';
	Visibility: 0;
	IN Math_Structure_view BEGIN
		Size: TAG_FONTSIZE;
		Font: TAG_Font;
		Style: TAG_Style; Weight: TAG_Weight;
		Visibility: TAG_Visibility;  Foreground: TAG_Color;
		END;
	END;

 MSUB_S: BEGIN
	Content: Text 'msub';
	Visibility: 0;
	IN Math_Structure_view BEGIN
		Size: TAG_FONTSIZE;
		Font: TAG_Font;
		Style: TAG_Style; Weight: TAG_Weight;
		Visibility: TAG_Visibility;  Foreground: TAG_Color;
		END;
	END;

 MSUP_S: BEGIN
	Content: Text 'msup';
	Visibility: 0;
	IN Math_Structure_view BEGIN
		Size: TAG_FONTSIZE;
		Font: TAG_Font;
		Style: TAG_Style; Weight: TAG_Weight;
		Visibility: TAG_Visibility;  Foreground: TAG_Color;
		END;
	END;

 MUNDER_S: BEGIN
	Content: Text 'munder';
	Visibility: 0;
	IN Math_Structure_view BEGIN
		Size: TAG_FONTSIZE;
		Font: TAG_Font;
		Style: TAG_Style; Weight: TAG_Weight;
		Visibility: TAG_Visibility;  Foreground: TAG_Color;
		END;
	END;

 MOVER_S: BEGIN
	Content: Text 'mover';
	Visibility: 0;
	IN Math_Structure_view BEGIN
		Size: TAG_FONTSIZE;
		Font: TAG_Font;
		Style: TAG_Style; Weight: TAG_Weight;
		Visibility: TAG_Visibility;  Foreground: TAG_Color;
		END;
	END;

 MUNDEROVER_S: BEGIN
	Content: Text 'munderover';
	Visibility: 0;
	IN Math_Structure_view BEGIN
		Size: TAG_FONTSIZE;
		Font: TAG_Font;
		Style: TAG_Style; Weight: TAG_Weight;
		Visibility: TAG_Visibility;  Foreground: TAG_Color;
		END;
	END;

 MMULTISCRIPTS_S: BEGIN
	Content: Text 'mmultiscripts';
	Visibility: 0;
	IN Math_Structure_view BEGIN
		Size: TAG_FONTSIZE;
		Font: TAG_Font;
		Style: TAG_Style; Weight: TAG_Weight;
		Visibility: TAG_Visibility;  Foreground: TAG_Color;
		END;
	END;

 NONE_S: BEGIN
	Content: Text 'none';
	Visibility: 0;
	IN Math_Structure_view BEGIN
		Size: TAG_FONTSIZE;
		Font: TAG_Font;
		Style: TAG_Style; Weight: TAG_Weight;
		Visibility: TAG_Visibility;  Foreground: TAG_Color;
		END;
	END;

 MPRESCRIPTS_S: BEGIN
	Content: Text 'mprescripts';
	Visibility: 0;
	IN Math_Structure_view BEGIN
		Size: TAG_FONTSIZE;
		Font: TAG_Font;
		Style: TAG_Style; Weight: TAG_Weight;
		Visibility: TAG_Visibility;  Foreground: TAG_Color;
		END;
	END;

 MTABLE_S: BEGIN
	Content: Text 'mtable';
	Visibility: 0;
	IN Math_Structure_view BEGIN
		Size: TAG_FONTSIZE;
		Font: TAG_Font;
		Style: TAG_Style; Weight: TAG_Weight;
		Visibility: TAG_Visibility;  Foreground: TAG_Color;
		END;
	END;

 MTR_S: BEGIN
	Content: Text 'mtr';
	Visibility: 0;
	IN Math_Structure_view BEGIN
		Size: TAG_FONTSIZE;
		Font: TAG_Font;
		Style: TAG_Style; Weight: TAG_Weight;
		Visibility: TAG_Visibility;  Foreground: TAG_Color;
		END;
	END;

 MLABELEDTR_S: BEGIN
	Content: Text 'mlabeledtr';
	Visibility: 0;
	IN Math_Structure_view BEGIN
		Size: TAG_FONTSIZE;
		Font: TAG_Font;
		Style: TAG_Style; Weight: TAG_Weight;
		Visibility: TAG_Visibility;  Foreground: TAG_Color;
		END;
	END;

 MTD_S: BEGIN
	Content: Text 'mtd';
	Visibility: 0;
	IN Math_Structure_view BEGIN
		Size: TAG_FONTSIZE;
		Font: TAG_Font;
		Style: TAG_Style; Weight: TAG_Weight;
		Visibility: TAG_Visibility;  Foreground: TAG_Color;
		END;
	END;

 MALIGNGROUP_S: BEGIN
	Content: Text 'maligngroup';
	Visibility: 0;
	IN Math_Structure_view BEGIN
		Size: TAG_FONTSIZE;
		Font: TAG_Font;
		Style: TAG_Style; Weight: TAG_Weight;
		Visibility: TAG_Visibility;  Foreground: TAG_Color;
		END;
	END;

 MALIGNMARK_S: BEGIN
	Content: Text 'malignmark';
	Visibility: 0;
	IN Math_Structure_view BEGIN
		Size: TAG_FONTSIZE;
		Font: TAG_Font;
		Style: TAG_Style; Weight: TAG_Weight;
		Visibility: TAG_Visibility;  Foreground: TAG_Color;
		END;
	END;

 MN_S: BEGIN
	Content: Text 'mn';
	Visibility: 0;
	IN Math_Structure_view BEGIN
		Size: TAG_FONTSIZE;
		Font: TAG_Font;
		Style: TAG_Style; Weight: TAG_Weight;
		Visibility: TAG_Visibility;  Foreground: TAG_Color;
		END;
	END;

 MI_S: BEGIN
	Content: Text 'mi';
	Visibility: 0;
	IN Math_Structure_view BEGIN
		Size: TAG_FONTSIZE;
		Font: TAG_Font;
		Style: TAG_Style; Weight: TAG_Weight;
		Visibility: TAG_Visibility;  Foreground: TAG_Color;
		END;
	END;

 MO_S: BEGIN
	Content: Text 'mo';
	Visibility: 0;
	IN Math_Structure_view BEGIN
		Size: TAG_FONTSIZE;
		Font: TAG_Font;
		Style: TAG_Style; Weight: TAG_Weight;
		Visibility: TAG_Visibility;  Foreground: TAG_Color;
		END;
	END;

 MS_S: BEGIN
	Content: Text 'ms';
	Visibility: 0;
	IN Math_Structure_view BEGIN
		Size: TAG_FONTSIZE;
		Font: TAG_Font;
		Style: TAG_Style; Weight: TAG_Weight;
		Visibility: TAG_Visibility;  Foreground: TAG_Color;
		END;
	END;

 MTEXT_S: BEGIN
	Content: Text 'mtext';
	Visibility: 0;
	IN Math_Structure_view BEGIN
		Size: TAG_FONTSIZE;
		Font: TAG_Font;
		Style: TAG_Style; Weight: TAG_Weight;
		Visibility: TAG_Visibility;  Foreground: TAG_Color;
		END;
	END;

 SEP_S: BEGIN
	Content: Text 'sep';
	Visibility: 0;
	IN Math_Structure_view BEGIN
		Size: TAG_FONTSIZE;
		Font: TAG_Font;
		Style: TAG_Style; Weight: TAG_Weight;
		Visibility: TAG_Visibility;  Foreground: TAG_Color;
		END;
	END;

 MSPACE_S: BEGIN
	Content: Text 'mspace';
	Visibility: 0;
	IN Math_Structure_view BEGIN
		Size: TAG_FONTSIZE;
		Font: TAG_Font;
		Style: TAG_Style; Weight: TAG_Weight;
		Visibility: TAG_Visibility;  Foreground: TAG_Color;
		END;
	END;

 MSTYLE_S: BEGIN
	Content: Text 'mstyle';
	Visibility: 0;
	IN Math_Structure_view BEGIN
		Size: TAG_FONTSIZE;
		Font: TAG_Font;
		Style: TAG_Style; Weight: TAG_Weight;
		Visibility: TAG_Visibility;  Foreground: TAG_Color;
		END;
	END;

 MERROR_S: BEGIN
	Content: Text 'merror';
	Visibility: 0;
	IN Math_Structure_view BEGIN
		Size: TAG_FONTSIZE;
		Font: TAG_Font;
		Style: TAG_Style; Weight: TAG_Weight;
		Visibility: TAG_Visibility;  Foreground: TAG_Color;
		END;
	END;

 MPADDED_S: BEGIN
	Content: Text 'mpadded';
	Visibility: 0;
	IN Math_Structure_view BEGIN
		Size: TAG_FONTSIZE;
		Font: TAG_Font;
		Style: TAG_Style; Weight: TAG_Weight;
		Visibility: TAG_Visibility;  Foreground: TAG_Color;
		END;
	END;

 MPHANTOM_S: BEGIN
	Content: Text 'mphantom';
	Visibility: 0;
	IN Math_Structure_view BEGIN
		Size: TAG_FONTSIZE;
		Font: TAG_Font;
		Style: TAG_Style; Weight: TAG_Weight;
		Visibility: TAG_Visibility;  Foreground: TAG_Color;
		END;
	END;

 MCHAR_S: BEGIN
	Content: Text 'mchar';
	Visibility: 0;
	IN Math_Structure_view BEGIN
		Size: TAG_FONTSIZE;
		Font: TAG_Font;
		Style: TAG_Style; Weight: TAG_Weight;
		Visibility: TAG_Visibility;  Foreground: TAG_Color;
		END;
	END;

 MGLYPH_S: BEGIN
	Content: Text 'mglyph';
	Visibility: 0;
	IN Math_Structure_view BEGIN
		Size: TAG_FONTSIZE;
		Font: TAG_Font;
		Style: TAG_Style; Weight: TAG_Weight;
		Visibility: TAG_Visibility;  Foreground: TAG_Color;
		END;
	END;

 MACTION_S: BEGIN
	Content: Text 'maction';
	Visibility: 0;
	IN Math_Structure_view BEGIN
		Size: TAG_FONTSIZE;
		Font: TAG_Font;
		Style: TAG_Style; Weight: TAG_Weight;
		Visibility: TAG_Visibility;  Foreground: TAG_Color;
		END;
	END;

{   A T T R I B U T E S   }

  ATTR_class: BEGIN
        Content: Text ' class=';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END;
  VALUE_class: BEGIN
        Content: (class);
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTRVALUE_Color;
                END;
        END;

  ATTR_style: BEGIN
        Content: Text ' style=';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END;
  VALUE_style: BEGIN
        Content: (style\240);
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTRVALUE_Color;
                END;
        END;

  ATTR_id: BEGIN
        Content: Text ' id=';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END;
  VALUE_id: BEGIN
        Content: (id);
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTRVALUE_Color;
                END;
        END;

  ATTR_xref: BEGIN
        Content: Text ' xref=';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END;
  VALUE_xref: BEGIN
        Content: (xref);
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTRVALUE_Color;
                END;
        END;

  ATTR_other: BEGIN
        Content: Text ' other=';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END;
  VALUE_other: BEGIN
        Content: (other);
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTRVALUE_Color;
                END;
        END;

  ATTR_link_simple: BEGIN
        Content: Text ' xml:link=simple';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END;
  ATTR_link_extended: BEGIN
        Content: Text ' xml:link=extended';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END;
  ATTR_link_locator: BEGIN
        Content: Text ' xml:link=locator';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END;
  ATTR_link_group: BEGIN
        Content: Text ' xml:link=group';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END;
  ATTR_link_document: BEGIN
        Content: Text ' xml:link=document';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END;

 ATTR_fontsize: BEGIN
        Content: Text ' fontsize=';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END;
 
 VALUE_fontsize: BEGIN
        Content: (fontsize);
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTRVALUE_Color;
                END;
        END;

 ATTR_fontweight_normal: BEGIN
        Content: Text ' fontweight=normal';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END;
 ATTR_fontweight_bold: BEGIN
        Content: Text ' fontweight=bold';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END;

 ATTR_fontstyle_normal: BEGIN
        Content: Text ' fontstyle=normal';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END;
 ATTR_fontstyle_italic: BEGIN
        Content: Text ' fontstyle=italic';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END;

 ATTR_fontfamily: BEGIN
        Content: Text ' fontfamily=';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END;
 
 VALUE_fontfamily: BEGIN
        Content: (fontfamily);
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTRVALUE_Color;
                END;
        END;

 ATTR_color: BEGIN
        Content: Text ' color=';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END;
 
 VALUE_color: BEGIN
        Content: (color);
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTRVALUE_Color;
                END;
        END;

 ATTR_form_prefix: BEGIN
        Content: Text ' form=prefix';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END;
 ATTR_form_infix: BEGIN
        Content: Text ' form=infix';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END;
 ATTR_form_postfix: BEGIN
        Content: Text ' form=postfix';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END;


 ATTR_fence_true: BEGIN
        Content: Text ' fence=true';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END;
 ATTR_fence_false: BEGIN
        Content: Text ' fence=false';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END;

 ATTR_separator_true: BEGIN
        Content: Text ' separator=true';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END;
 ATTR_separator_false: BEGIN
        Content: Text ' separator=false';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END;

 ATTR_lspace: BEGIN
        Content: Text ' lspace=';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END;
 VALUE_lspace: BEGIN
        Content: (lspace);
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTRVALUE_Color;
                END;
        END;

 ATTR_rspace: BEGIN
        Content: Text ' rspace=';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END;
 VALUE_rspace: BEGIN
        Content: (rspace);
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTRVALUE_Color;
                END;
        END;

 ATTR_stretchy_true: BEGIN
        Content: Text ' stretchy=true';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END;
 ATTR_stretchy_false: BEGIN
        Content: Text ' stretchy=false';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END;

 ATTR_symmetric_true: BEGIN
        Content: Text ' symmetric=true';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END;
 ATTR_symmetric_false: BEGIN
        Content: Text ' symmetric=false';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END;

 ATTR_maxsize: BEGIN
        Content: Text ' maxsize=';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END; 
 VALUE_maxsize: BEGIN
        Content: (maxsize);
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTRVALUE_Color;
                END;
        END;

 ATTR_minsize: BEGIN
        Content: Text ' minsize=';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END; 
 VALUE_minsize: BEGIN
        Content: (minsize);
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTRVALUE_Color;
                END;
        END;

 ATTR_largeop_true: BEGIN
        Content: Text ' largeop=true';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END;
 ATTR_largeop_false: BEGIN
        Content: Text ' largeop=false';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END;

 ATTR_movablelimits_true: BEGIN
        Content: Text ' movablelimits=true';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END;
 ATTR_movablelimits_false: BEGIN
        Content: Text ' movablelimits=false';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END;
 ATTR_accent_true: BEGIN
        Content: Text ' accent=true';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END;
 ATTR_accent_false: BEGIN
        Content: Text ' accent=false';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END;

 ATTR_width: BEGIN
        Content: Text ' width=';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END; 
 VALUE_width: BEGIN
        Content: (width\240);
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTRVALUE_Color;
                END;
        END;

 ATTR_height: BEGIN
        Content: Text ' height=';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END; 
 VALUE_height: BEGIN
        Content: (height\240);
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTRVALUE_Color;
                END;
        END;

 ATTR_depth: BEGIN
        Content: Text ' depth=';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END; 
 VALUE_depth: BEGIN
        Content: (depth\240);
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTRVALUE_Color;
                END;
        END;

 ATTR_lquote: BEGIN
        Content: Text ' lquote=';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END; 
 VALUE_lquote: BEGIN
        Content: (lquote);
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTRVALUE_Color;
                END;
        END;

 ATTR_rquote: BEGIN
        Content: Text ' rquote=';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END; 
 VALUE_rquote: BEGIN
        Content: (rquote);
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTRVALUE_Color;
                END;
        END;

 ATTR_linethickness: BEGIN
        Content: Text ' linethickness=';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END; 
 VALUE_linethickness: BEGIN
        Content: (linethickness);
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTRVALUE_Color;
                END;
        END;

 ATTR_numalign_left: BEGIN
        Content: Text ' numalign=left';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END;
 ATTR_numalign_center: BEGIN
        Content: Text ' numalign=center';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END;
 ATTR_numalign_right: BEGIN
        Content: Text ' numalign=right';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END;

 ATTR_denomalign_left: BEGIN
        Content: Text ' denomalign=left';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END;
 ATTR_denomalign_center: BEGIN
        Content: Text ' denomalign=center';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END;
 ATTR_denomalign_right: BEGIN
        Content: Text ' denomalign=right';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END;

 ATTR_beveled_true: BEGIN
        Content: Text ' beveled=true';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END;
 ATTR_beveled_false: BEGIN
        Content: Text ' beveled=false';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END;

 ATTR_notation_longdiv: BEGIN
        Content: Text ' notation=longdiv';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END;
 ATTR_notation_actuarial: BEGIN
        Content: Text ' notation=actuarial';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END;
 ATTR_notation_radical: BEGIN
        Content: Text ' notation=radical';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END;

 ATTR_scriptlevel: BEGIN
        Content: Text ' scriptlevel=';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END; 
 VALUE_scriptlevel: BEGIN
        Content: (scriptlevel);
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTRVALUE_Color;
                END;
        END;

 ATTR_displaystyle_true: BEGIN
        Content: Text ' displaystyle=true';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END;
 ATTR_displaystyle_false: BEGIN
        Content: Text ' displaystyle=false';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END;

 ATTR_side_left: BEGIN
        Content: Text ' side=left';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END;
 ATTR_side_right: BEGIN
        Content: Text ' side=right';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END;
 ATTR_side_leftoverlap: BEGIN
        Content: Text ' side=leftoverlap';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END;
 ATTR_side_rightoverlap: BEGIN
        Content: Text ' side=rightoverlap';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END;

 ATTR_minlabelspacing: BEGIN
        Content: Text ' minlabelspacing=';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END; 
 VALUE_minlabelspacing: BEGIN
        Content: (minlabelspacing);
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTRVALUE_Color;
                END;
        END;

 ATTR_name: BEGIN
        Content: Text ' name=';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END; 
 VALUE_name: BEGIN
        Content: (name);
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTRVALUE_Color;
                END;
        END;

 ATTR_alt: BEGIN
        Content: Text ' alt=';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END; 
 VALUE_alt: BEGIN
        Content: (alt);
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTRVALUE_Color;
                END;
        END;

 ATTR_index: BEGIN
        Content: Text ' index=';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END; 
 VALUE_index: BEGIN
        Content: (index);
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTRVALUE_Color;
                END;
        END;

 ATTR_scriptsizemultiplier: BEGIN
        Content: Text ' scriptsizemultiplier=';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END; 
 VALUE_scriptsizemultiplier: BEGIN
        Content: (scriptsizemultiplier);
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTRVALUE_Color;
                END;
        END;

 ATTR_scriptminsize: BEGIN
        Content: Text ' scriptminsize=';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END; 
 VALUE_scriptminsize: BEGIN
        Content: (scriptminsize);
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTRVALUE_Color;
                END;
        END;

 ATTR_background: BEGIN
        Content: Text ' background=';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END; 
 VALUE_background: BEGIN
        Content: (background\240);
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTRVALUE_Color;
                END;
        END;

 ATTR_open: BEGIN
        Content: Text ' open=';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END; 
 VALUE_open: BEGIN
        Content: (open);
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTRVALUE_Color;
                END;
        END;

 ATTR_close: BEGIN
        Content: Text ' close=';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END;
 VALUE_close: BEGIN
        Content: (close);
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTRVALUE_Color;
                END;
        END;

 ATTR_separators: BEGIN
        Content: Text ' separators=';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END; 
 VALUE_separators: BEGIN
        Content: (separators);
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTRVALUE_Color;
                END;
        END;

 ATTR_subscriptshift: BEGIN
        Content: Text ' subscriptshift=';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END; 
 VALUE_subscriptshift: BEGIN
        Content: (subscriptshift);
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTRVALUE_Color;
                END;
        END;

 ATTR_superscriptshift: BEGIN
        Content: Text ' superscriptshift=';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END; 
 VALUE_superscriptshift: BEGIN
        Content: (superscriptshift);
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTRVALUE_Color;
                END;
        END;

 ATTR_accentunder_true: BEGIN
        Content: Text ' accentunder=true';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END; 
 ATTR_accentunder_false: BEGIN
        Content: Text ' accentunder=false';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END; 

 ATTR_align: BEGIN
        Content: Text ' align=';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END; 
 VALUE_align: BEGIN
        Content: (align);
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTRVALUE_Color;
                END;
        END;

 ATTR_rowalign: BEGIN
        Content: Text ' rowalign=';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END; 
 VALUE_rowalign: BEGIN
        Content: (rowalign);
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTRVALUE_Color;
                END;
        END;

 ATTR_columnalign: BEGIN
        Content: Text ' columnalign=';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END; 
 VALUE_columnalign: BEGIN
        Content: (columnalign);
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTRVALUE_Color;
                END;
        END;

 ATTR_groupalign: BEGIN
        Content: Text ' groupalign=';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END; 
 VALUE_groupalign: BEGIN
        Content: (groupalign);
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTRVALUE_Color;
                END;
        END;

 ATTR_alignmentscope: BEGIN
        Content: Text ' alignmentscope=';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END; 
 VALUE_alignmentscope: BEGIN
        Content: (alignmentscope);
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTRVALUE_Color;
                END;
        END;

 ATTR_columnwidth: BEGIN
        Content: Text ' columnwidth=';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END; 
 VALUE_columnwidth: BEGIN
        Content: (columnwidth);
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTRVALUE_Color;
                END;
        END;

 ATTR_rowspacing: BEGIN
        Content: Text ' rowspacing=';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END; 
 VALUE_rowspacing: BEGIN
        Content: (rowspacing);
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTRVALUE_Color;
                END;
        END;

 ATTR_columnspacing: BEGIN
        Content: Text ' columnspacing=';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END; 
 VALUE_columnspacing: BEGIN
        Content: (columnspacing);
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTRVALUE_Color;
                END;
        END;

 ATTR_rowlines: BEGIN
        Content: Text ' rowlines=';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END; 
 VALUE_rowlines: BEGIN
        Content: (rowlines);
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTRVALUE_Color;
                END;
        END;

 ATTR_columnlines: BEGIN
        Content: Text ' columnlines=';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END; 
 VALUE_columnlines: BEGIN
        Content: (columnlines);
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTRVALUE_Color;
                END;
        END;

 ATTR_frame_none: BEGIN
        Content: Text ' frame=none';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END; 
 ATTR_frame_solid: BEGIN
        Content: Text ' frame=solid';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END; 
 ATTR_frame_dashed: BEGIN
        Content: Text ' frame=dashed';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END; 

 ATTR_framespacing: BEGIN
        Content: Text ' framespacing=';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END; 
 VALUE_framespacing: BEGIN
        Content: (framespacing);
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTRVALUE_Color;
                END;
        END;

 ATTR_equalrows: BEGIN
        Content: Text ' equalrows=';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END; 
 VALUE_equalrows: BEGIN
        Content: (equalrows);
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTRVALUE_Color;
                END;
        END;

 ATTR_equalcolumns: BEGIN
        Content: Text ' equalcolumns=';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END; 
 VALUE_equalcolumns: BEGIN
        Content: (equalcolumns);
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTRVALUE_Color;
                END;
        END;

 ATTR_rowspan: BEGIN
        Content: Text ' rowspan=';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END; 
 VALUE_rowspan: BEGIN
        Content: (rowspan\240);
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTRVALUE_Color;
                END;
        END;

 ATTR_columnspan: BEGIN
        Content: Text ' columnspan=';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END; 
 VALUE_columnspan: BEGIN
        Content: (columnspan);
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTRVALUE_Color;
                END;
        END;

 ATTR_edge_left: BEGIN
        Content: Text ' edge=left';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END; 
 ATTR_edge_right: BEGIN
        Content: Text ' edge=right';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END; 

 ATTR_actiontype: BEGIN
        Content: Text ' actiontype=';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END; 
 VALUE_actiontype: BEGIN
        Content: (actiontype);
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTRVALUE_Color;
                END;
        END;

 ATTR_selection: BEGIN
        Content: Text ' selection=';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
                END;
        END; 
 VALUE_selection: BEGIN
        Content: (selection);
        Visibility: 0;
        IN Math_Structure_view BEGIN
                HorizPos: Left = Previous . Right;
                VertPos: HRef = Previous . HRef;
                Size: TAG_FONTSIZE;
                Style: ATTR_Style; Weight: ATTR_Weight;
                Visibility: ATTR_Visibility;  Foreground: ATTRVALUE_Color;
                END;
        END;

 VALUE_EntityName: BEGIN
        Content: (EntityName);
        Visibility: 0;
        IN Math_Structure_view BEGIN
                Visibility: ATTR_Visibility;	
		Size: DOC_FONTSIZE;
		Foreground: ATTR_Color;
		if NOT within XMLcomment_line
		   BEGIN
		   HorizPos: Left = Enclosing . Left;
		   VertPos: Top = Previous AnyBox . Bottom;
		   END;
		if within XMLcomment_line
		   HorizPos: Left = Previous AnyBox . Right;
                END;
        END;

 VerticalLine: BEGIN
	Content: Graphics 'W';
	Visibility: 0;
	IN Math_Structure_view BEGIN
		VertPos: Top = Creator . Top;
		HorizPos: Left = Enclosing . Left;
		Height: Creator . Height;
		Width: 1.1;
		LineWeight: 2 pt;
		Visibility: TAG_Visibility;  Foreground: TAG_Color;
		END;
	END;

 Bar:	{ fraction bar }
	BEGIN
	LineWeight: 1 pt;
	Height: 0.1;
        Width: Enclosing . Width ;
	HorizPos: Left = Enclosing . Left;
	Content: Graphics 'h';	{ horizontal bar }
	LineStyle: Solid;
	Background: Creator =;
	Foreground: Creator =;
	IN Math_Structure_view
		Visibility: 0;
	END;

 BeveledBar:	{ fraction bar, beveled style }
	BEGIN
	LineWeight: 1 pt;
	Height: Enclosing . Height - 0.4;
        Width: 0.6 ;
	HorizPos: Left = Numerator . Right - 0.1;
	VertPos: Top = Enclosing . Top + 0.2;
	Content: Graphics '/';	{ diagonal bar }
	LineStyle: Solid;
	Background: Creator =;
	Foreground: Creator =;
	IN Math_Structure_view
		Visibility: 0;
	END;

 RootSymbol:
	BEGIN
	LineWeight: 1 pt;
	Height: Enclosing . Height;
	Width: RootBase . Width + ROOT_OFFSET;
	VertPos: Top = Enclosing . Top;
	HorizPos: Left = RootBase . Left - ROOT_OFFSET;
	Content: Symbol 'r';		{ root symbol }
	LineStyle: Solid;
	Depth: Creator + 1;
	Background: Creator =;
	Foreground: Creator =;
	IN Math_Structure_view
		Visibility: 0;
	END;

 SqrtSymbol:
	BEGIN
	LineWeight: 1 pt;
	Height: Enclosing . Height;
	Width: SqrtBase . Width + ROOT_OFFSET;
	VertPos: Top = Enclosing . Top;
	HorizPos: Left = SqrtBase . Left - ROOT_OFFSET;
	Content: Symbol 'r';		{ root symbol }
	LineStyle: Solid;
	Depth: Creator + 1;
	Background: Creator =;
	Foreground: Creator =;
	IN Math_Structure_view
		Visibility: 0;
	END;

 RadicalSymbol:
	BEGIN
	LineWeight: 1 pt;
	Height: Creator . Height;
	Width: Creator . Width;
	VertPos: Top = Creator . Top;
	HorizPos: Left = Creator . Left;
	Content: Symbol 'r';		{ root symbol }
	LineStyle: Solid;
	Depth: Creator + 1;
	Background: Creator =;
	Foreground: Creator =;
	IN Math_Structure_view
		Visibility: 0;
	END;

 OpeningQuote: BEGIN
 	Content: Text '"';
	IN Math_Structure_view
		Visibility: 0;
	END;

 ClosingQuote: BEGIN
 	Content: Text '"';
	IN Math_Structure_view
		Visibility: 0;
	END;

 HR_Graph: BEGIN
	Content: Graphics 'h';
	Visibility: 0;
	IN Math_Structure_view BEGIN
		Visibility: 10;
		Height: 0.6;
	        Width: Enclosing . Width ;
		HorizPos: Left = Enclosing . Left;
		VertPos: Top = Previous . Bottom;
		LineWeight: 2 pt;
		Foreground: TAG_Color;
		END;
	END;

 Comment_Start:
        BEGIN
        Content: Text '<!--';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                Visibility: Enclosing =;
                Foreground: TAG_Color;
                END;
        END;
 
 Comment_End:
        BEGIN
        Content: Text '-->';
        Visibility: 0;
        IN Math_Structure_view BEGIN
                Visibility: Enclosing =;
                Foreground: TAG_Color;
		HorizPos: Left = Previous . Right;
		VertPos: HRef = Previous . HRef;
                END;
        END;
 
RULES

   MathML:
	BEGIN
	CreateLast(HR_Graph);
	PageBreak: No;
	LineBreak: No;
	LineWeight: 1 pt;
	VertPos: Top = Previous . Bottom;
	HorizPos: Left = Enclosing . Left;
	Visibility: Enclosing - 2;
	IN Math_Structure_view BEGIN
		Width: Enclosing . Width;
		Visibility: 10;
		END;
	END;

   XMLcomment:
        BEGIN
        Visibility: 0;
        IN Math_Structure_view BEGIN
                Visibility: 10;
                Width: Enclosing . Width ;
                END;
        END;

   XMLcomment_line:
	BEGIN
        IF First CreateFirst(Comment_Start);
        IF Last CreateLast(Comment_End);
        IN Math_Structure_view BEGIN
		HorizPos: Left = Enclosing . Left;
        	VertPos: Top = Previous . Bottom + 0.2;
        	Width: Enclosed . Width;
                END;
        END;
 
   MROW:
	BEGIN
	CreateBefore(MROW_S);
	CreateWith(VerticalLine);
        HorizRef: Enclosed not ElemWithAttr IntVertStretch . HRef;
	VertPos: HRef = Previous not ElemWithAttr IntVertStretch . HRef;
	IN Math_Structure_view BEGIN
		Size: DOC_FONTSIZE;
		Width: Enclosing . Width - STRUCT_INDENT;
		HorizPos: Left = Enclosing . Left + STRUCT_INDENT;
		Font: Helvetica;
		END;
  	END;

   Construct:
	BEGIN
	if empty and immediately within MSubscript
		CreateFirst (NONE_S);
	if empty and immediately within MSuperscript
		CreateFirst (NONE_S);
	VertPos: HRef = Previous not ElemWithAttr IntVertStretch . HRef;
	Fillpattern: gray2;
	LineWeight: 0;	{ do not draw the outline }
	ShowBox;
	if not immediately within MSubscript and
	   not immediately within MSuperscript
		Width: 0.5;
	IN Math_Structure_view BEGIN
		Width: Enclosing . Width;
		Height: Enclosed . Height;
		HorizPos: Left = Enclosing . Left;
		END;
  	END;

   MSQRT:
        BEGIN
	CreateFirst(SqrtSymbol);
	CreateBefore(MSQRT_S);
	CreateWith(VerticalLine);
	HorizRef: Enclosed SqrtBase . HRef ;
	VertPos: HRef = Previous not ElemWithAttr IntVertStretch . HRef;
	Gather: Yes;
	IN Math_Structure_view BEGIN
		Size: DOC_FONTSIZE;
		Width: Enclosing . Width - STRUCT_INDENT;
		Height: Enclosed . Height;
		HorizPos: Left = Enclosing . Left + STRUCT_INDENT;
		Font: Helvetica;
		END;
  	END;

   MENCLOSE:
        BEGIN
	CreateBefore(MENCLOSE_S);
	CreateWith(VerticalLine);
        HorizRef: Enclosed . HRef;
	VertPos: HRef = Previous not ElemWithAttr IntVertStretch . HRef;
	BorderTopWidth: 1 pt;
	BorderLeftWidth: 1 pt;
	BorderTopStyle: Solid;
	BorderLeftStyle: Solid;
	PaddingLeft: 0.2;
	MarginLeft: 0.2;
	IN Math_Structure_view BEGIN
		Size: DOC_FONTSIZE;
		Width: Enclosing . Width - STRUCT_INDENT;
		VertPos: Top =  Previous . Bottom;
		HorizPos: Left = Enclosing . Left + STRUCT_INDENT;
		Font: Helvetica;
		BorderTopWidth: Enclosing =;
		BorderLeftWidth: Enclosing =;
		PaddingLeft: Enclosing =;
		MarginLeft: Enclosing =;
		END;
  	END;

   MROOT:
        BEGIN
	CreateFirst(RootSymbol);
	CreateBefore(MROOT_S);
	CreateWith(VerticalLine);
	HorizRef: Enclosed RootBase . HRef ;
	VertPos: HRef = Previous not ElemWithAttr IntVertStretch . HRef;
	Gather: Yes;
	IN Math_Structure_view BEGIN
		Size: DOC_FONTSIZE;
		Width: Enclosing . Width - STRUCT_INDENT;
		Height: Enclosed . Height;
		HorizPos: Left = Enclosing . Left + STRUCT_INDENT;
		Font: Helvetica;
		END;
  	END;

   Index:
   	BEGIN
	HorizRef: * . Top;
   	HorizPos: Left = Enclosing . Left;
   	VertPos: Top = Enclosing . Top;
	Width: ROOT_OFFSET min;
   	Size: Enclosing * 60 %;
	IN Math_Structure_view BEGIN
		Size: Enclosing =;
		Width: Enclosing . Width;
		Height: Enclosed . Height;
		END;
   	END;
	
   RootBase:	
        BEGIN
	VertPos: Top = Enclosing . Top + 0.1;
	HorizPos: Left = Index . Right;
	IN Math_Structure_view BEGIN
		Width: Enclosing . Width;
		Height: Enclosed . Height;
		END;
  	END;

   SqrtBase:	
        BEGIN
	VertPos: Top = Enclosing . Top + 0.1;
	HorizPos: Left = Enclosing . Left + ROOT_OFFSET;
	IN Math_Structure_view BEGIN
		Width: Enclosing . Width;
		Height: Enclosed . Height;
		END;
  	END;

   MFRAC:
	BEGIN
	CreateBefore(MFRAC_S);
	CreateWith(VerticalLine);
	CreateFirst (Bar);
	HorizRef: Enclosed Bar . Bottom + 0.1;
	VertPos: HRef = Previous not ElemWithAttr IntVertStretch . HRef;
	Gather: Yes;
	IN Math_Structure_view BEGIN
		Size: DOC_FONTSIZE;
		Width: Enclosing . Width - STRUCT_INDENT;
		Height: Enclosed . Height;
		HorizPos: Left = Enclosing . Left + STRUCT_INDENT;
		END;
	END;

   BeveledMFRAC:
	BEGIN
	CreateBefore(MFRAC_S);
	CreateWith(VerticalLine);
	CreateFirst (BeveledBar);
	HorizRef: Enclosed Numerator . HRef + 0.2;
	VertPos: HRef = Previous not ElemWithAttr IntVertStretch . HRef;
	Gather: Yes;
	IN Math_Structure_view BEGIN
		Size: DOC_FONTSIZE;
		Width: Enclosing . Width - STRUCT_INDENT;
		Height: Enclosed . Height;
		HorizPos: Left = Enclosing . Left + STRUCT_INDENT;
		END;
	END;

   Numerator:
	BEGIN
        if Immediately within BeveledMFRAC
	   BEGIN
	   HorizRef: Enclosed . HRef;
	   VertPos: nil;
	   HorizPos: Left = Enclosing . Left;
	   END;
        if Immediately within MFRAC
	   BEGIN
	   HorizRef: * . Top;
	   VertPos: Bottom = Bar . Top;
	   HorizPos: VMiddle = Bar . VMiddle;
	   END;
	IN Math_Structure_view BEGIN
		Width: Enclosing . Width;
		Height: Enclosed . Height;
		END;
	END;

   Denominator:
        BEGIN
        if immediately within BeveledMFRAC
	   BEGIN
	   HorizRef: Enclosed . HRef;
	   HorizPos: Left = BeveledBar . Right - 0.1;
	   VertPos: HRef = Numerator . HRef + 0.4;
	   END;
        if immediately within MFRAC
	   BEGIN
	   HorizRef: * . Top;
	   HorizPos: VMiddle = Bar . VMiddle;
	   VertPos: Top = Bar . Bottom;
	   END;
	IN Math_Structure_view BEGIN
		Width: Enclosing . Width;
		Height: Enclosed . Height;
		END;
	END;

   MFENCED:
        BEGIN
	CreateBefore(MFENCED_S);
	CreateWith(VerticalLine);
	HorizRef: Enclosed FencedExpression . HRef ;
	VertPos: HRef = Previous not ElemWithAttr IntVertStretch . HRef;
	Gather: Yes;
	IN Math_Structure_view BEGIN
		Width: Enclosing . Width - STRUCT_INDENT;
		Height: Enclosed . Height;
		HorizPos: Left = Enclosing . Left + STRUCT_INDENT;
		END;
  	END;

   FencedExpression:
        BEGIN
	HorizRef: Enclosed . HRef ;
	VertPos: Nil;
	Gather: Yes;
	IN Math_Structure_view BEGIN
		Width: Enclosing . Width;
		Height: Enclosed . Height;
		HorizPos: Left = Enclosing . Left;
		END;
  	END;

   FencedSeparator:
	BEGIN
	HorizPos: Left = Previous . Right;
	IN Math_Structure_view
		Visibility: 0;
	END;

   OpeningFence:
        BEGIN
	HorizRef: Enclosed . HRef ;
	VertPos: Top = Enclosing . Top;
	Height: Enclosing . Height;
	HorizPos: Left = Enclosing . Left;
	Gather: Yes;
	IN Math_Structure_view
		Visibility: 0;
	END;

   ClosingFence:
        BEGIN
	HorizRef: Enclosed . HRef ;
	VertPos: Top = Enclosing . Top;
	Height: Enclosing . Height;
	HorizPos: Left = Previous . Right;
	Gather: Yes;
	IN Math_Structure_view
		Visibility: 0;
	END;

   MSUBSUP:
        BEGIN
	Gather: Yes;
	HorizRef: Enclosed  Base. HRef;
	CreateBefore(MSUBSUP_S);
	CreateWith(VerticalLine);
	VertPos: HRef = Previous not ElemWithAttr IntVertStretch . HRef;
	IN Math_Structure_view BEGIN
		Size: DOC_FONTSIZE;
		Width: Enclosing . Width - STRUCT_INDENT;
		Height: Enclosed . Height;
		HorizPos: Left = Enclosing . Left + STRUCT_INDENT;
		END;
	END;

   MSUB:
        BEGIN
	Gather: Yes;
	HorizRef: Enclosed  Base. HRef;
	CreateBefore(MSUB_S);
	CreateWith(VerticalLine);
	VertPos: HRef = Previous not ElemWithAttr IntVertStretch . HRef;
	IN Math_Structure_view BEGIN
		Size: DOC_FONTSIZE;
		Width: Enclosing . Width - STRUCT_INDENT;
		Height: Enclosed . Height;
		HorizPos: Left = Enclosing . Left + STRUCT_INDENT;
		END;
	END;

   MSUP:
        BEGIN
	Gather: Yes;
	HorizRef: Enclosed  Base. HRef;
	CreateBefore(MSUP_S);
	CreateWith(VerticalLine);
	VertPos: HRef = Previous not ElemWithAttr IntVertStretch . HRef;
	IN Math_Structure_view BEGIN
		Size: DOC_FONTSIZE;
		Width: Enclosing . Width - STRUCT_INDENT;
		Height: Enclosed . Height;
		HorizPos: Left = Enclosing . Left + STRUCT_INDENT;
		END;
	END;

   Base:
	BEGIN
	VertPos: NIL;
	HorizPos: Left = Enclosing . Left;
	IN Math_Structure_view BEGIN
		Width: Enclosing . Width;
		Height: Enclosed . Height;
		END;
	END;

   Superscript:
	BEGIN
	Size: Enclosing * 60 %;
	HorizRef: * . Top;
	HorizPos: Left = Base . Right;
	VertPos: Bottom = Base . Top + 0.7;
	IN Math_Structure_view BEGIN
		Size: Enclosing =;
		Width: Enclosing . Width;
		Height: Enclosed . Height;
		END;
	END;

   Subscript:
	BEGIN
	Size: Enclosing * 60 %;
	HorizRef: * . Top;
	HorizPos: Left = Base . Right;
	VertPos: Top = Base . Bottom - 0.7;
	IN Math_Structure_view BEGIN
		Size: Enclosing =;
		Width: Enclosing . Width;
		Height: Enclosed . Height;
		END;
	END;

   MUNDER:
        BEGIN
	Gather: Yes;
	HorizRef: Enclosed UnderOverBase . HRef;
	CreateBefore(MUNDER_S);
	CreateWith(VerticalLine);
	VertPos: HRef = Previous not ElemWithAttr IntVertStretch . HRef;
	IN Math_Structure_view BEGIN
		Size: DOC_FONTSIZE;
		Width: Enclosing . Width - STRUCT_INDENT;
		Height: Enclosed . Height;
		HorizPos: Left = Enclosing . Left + STRUCT_INDENT;
		END;
	END;

   MOVER:
        BEGIN
	Gather: Yes;
	HorizRef: Enclosed UnderOverBase . HRef;
	CreateBefore(MOVER_S);
	CreateWith(VerticalLine);
	VertPos: HRef = Previous not ElemWithAttr IntVertStretch . HRef;
	IN Math_Structure_view BEGIN
		Size: DOC_FONTSIZE;
		Width: Enclosing . Width - STRUCT_INDENT;
		Height: Enclosed . Height;
		HorizPos: Left = Enclosing . Left + STRUCT_INDENT;
		END;
	END;

   MUNDEROVER:
        BEGIN
	Gather: Yes;
	HorizRef: Enclosed UnderOverBase . HRef;
	CreateBefore(MUNDEROVER_S);
	CreateWith(VerticalLine);
	VertPos: HRef = Previous not ElemWithAttr IntVertStretch . HRef;
	IN Math_Structure_view BEGIN
		Size: DOC_FONTSIZE;
		Width: Enclosing . Width - STRUCT_INDENT;
		Height: Enclosed . Height;
		HorizPos: Left = Enclosing . Left + STRUCT_INDENT;
		END;
	END;

   UnderOverBase:
	BEGIN
	VertPos: NIL;
	HorizPos: VMiddle = Enclosing . VMiddle;
	IN Math_Structure_view BEGIN
		Width: Enclosing . Width;
		Height: Enclosed . Height;
		END;
	END;

   Underscript:
	BEGIN
	Size: Enclosing * 60 %;
	HorizRef: * . Top;
	HorizPos: VMiddle = Enclosing . VMiddle;
	VertPos: Top = UnderOverBase . Bottom;
	IN Math_Structure_view BEGIN
		Size: Enclosing =;
		Width: Enclosing . Width;
		Height: Enclosed . Height;
		END;
	END;

   Overscript:
	BEGIN
	Size: Enclosing * 60 %;
	HorizRef: * . Top;
	HorizPos: VMiddle = Enclosing . VMiddle;
	VertPos: Bottom = UnderOverBase . Top;
	IN Math_Structure_view BEGIN
		Size: Enclosing =;
		Width: Enclosing . Width;
		Height: Enclosed . Height;
		END;
	END;

   MMULTISCRIPTS:
        BEGIN
	Gather: Yes;
	HorizRef: Enclosed MultiscriptBase . HRef;
	CreateBefore(MMULTISCRIPTS_S);
	CreateWith(VerticalLine);
	VertPos: HRef = Previous not ElemWithAttr IntVertStretch . HRef;
	IN Math_Structure_view BEGIN
		Size: DOC_FONTSIZE;
		Width: Enclosing . Width - STRUCT_INDENT;
		Height: Enclosed . Height;
		HorizPos: Left = Enclosing . Left + STRUCT_INDENT;
		END;
	END;

   MultiscriptBase:
	BEGIN
	VertPos: NIL;
	HorizPos: NIL;
	IN Math_Structure_view BEGIN
		Width: Enclosing . Width;
		Height: Enclosed . Height;
		END;
	END;

   PostscriptPairs:
	BEGIN
	Size: Enclosing * 60 %;
	HorizRef: * . Top;
	HorizPos: Left = MultiscriptBase . Right;
	Height: MultiscriptBase . Height + 1;
	VertPos: Top = MultiscriptBase . Top - 0.5;
	IN Math_Structure_view BEGIN
		Size: Enclosing =;
		Width: Enclosing . Width;
		Height: Enclosed . Height;
		END;
	END;

   PrescriptPairs:
	BEGIN
	CreateBefore(MPRESCRIPTS_S);
	Size: Enclosing * 60 %;
	HorizRef: * . Top;
	HorizPos: Right = MultiscriptBase . Left;
	Height: MultiscriptBase . Height + 1;
	VertPos: Top = MultiscriptBase . Top - 0.5;
	IN Math_Structure_view BEGIN
		Size: Enclosing =;
		Width: Enclosing . Width;
		Height: Enclosed . Height;
		END;
	END;

   PrescriptPair:
	BEGIN
	HorizRef: * . Top;
	HorizPos: Left = Previous . Right + 0.2;
	VertPos: Top = Enclosing . Top;
	Height: Enclosing . Height;
	IN Math_Structure_view BEGIN
		Width: Enclosing . Width;
		Height: Enclosed . Height;
		END;
	END;

   PostscriptPair:
	BEGIN
	HorizRef: * . Top;
	HorizPos: Left = Previous . Right + 0.2;
	VertPos: Top = Enclosing . Top;
	Height: Enclosing . Height;
	IN Math_Structure_view BEGIN
		Width: Enclosing . Width;
		Height: Enclosed . Height;
		END;
	END;

   MSubscript:
	BEGIN
	HorizRef: * . Top;
	HorizPos: Left = Enclosing . Left;
	VertPos: Bottom = Enclosing . Bottom;
	IN Math_Structure_view BEGIN
		Width: Enclosing . Width;
		Height: Enclosed . Height;
		END;
	END;

   MSuperscript:
	BEGIN
	HorizRef: * . Top;
	HorizPos: Left = Enclosing . Left;
	VertPos: Top = Enclosing . Top;
	IN Math_Structure_view BEGIN
		Width: Enclosing . Width;
		Height: Enclosed . Height;
		END;
	END;

   MTABLE:
	BEGIN
	Gather: Yes;
	LineBreak: No;
	Justify: No;
	PageBreak: No;
	HorizRef: * . HMiddle;
	CreateBefore(MTABLE_S);
	CreateWith(VerticalLine);
	VertPos: HRef = Previous not ElemWithAttr IntVertStretch . HRef;
	IN Math_Structure_view BEGIN
		Size: DOC_FONTSIZE;
		Width: Enclosing . Width - STRUCT_INDENT;
		HorizPos: Left = Enclosing . Left + STRUCT_INDENT;
		END;	
	END;

   MTable_head:
	BEGIN
	HorizRef: * . Top;
	HorizPos: Left = Enclosing . Left;
	VertPos: Top = Enclosing . Top;
	Width: Enclosed . Width;
	IN Math_Structure_view
		Visibility: 0;
	END;

   MColumn_head:
        BEGIN
        HorizRef: * . Top;
        HorizPos: Left = Previous . Right + 0.8;
        VertPos: Top = Enclosing . Top;
        Width: 2 px;
        END;

   MC_Head:
        BEGIN
        HorizRef: * . Top;
        VertPos : Top = Enclosing . Top;
        Width: 2 px;
        Height: 1 px;
        FillPattern: nopattern;
        END;

   MTable_body:
	BEGIN
	HorizPos: Left = Enclosing . Left;
	VertPos: Top = Previous . Bottom;
	IN Math_Structure_view BEGIN
		Size: DOC_FONTSIZE;
		Width: Enclosing . Width;
		HorizPos: Left = Enclosing . Left;
		END;	
	END;

   MTR:
	BEGIN
	CreateBefore(MTR_S);
	CreateWith(VerticalLine);
	HorizPos: Left = Enclosing . Left;
	VertPos: Top = Previous . Bottom + 1 ex;
	IN Math_Structure_view BEGIN
		Size: DOC_FONTSIZE;
		Width: Enclosing . Width - STRUCT_INDENT;
		HorizPos: Left = Enclosing . Left + STRUCT_INDENT;
		END;		
	END;

   MLABELEDTR:
	BEGIN
	CreateBefore(MLABELEDTR_S);
	CreateWith(VerticalLine);
	HorizPos: Left = Enclosing . Left;
	VertPos: Top = Previous . Bottom + 1 ex;
	IN Math_Structure_view BEGIN
		Size: DOC_FONTSIZE;
		Width: Enclosing . Width - STRUCT_INDENT;
		HorizPos: Left = Enclosing . Left + STRUCT_INDENT;
		END;		
	END;

   MTD:
	BEGIN
	CreateBefore(MTD_S);
	CreateWith(VerticalLine);
	IN Math_Structure_view BEGIN
		Size: DOC_FONTSIZE;
		Width: Enclosing . Width - STRUCT_INDENT;
		HorizPos: Left = Enclosing . Left + STRUCT_INDENT;
		END;		
	END;

   CellWrapper:
	BEGIN
	VertPos: Top = Enclosing . Top;
	HorizPos: VMiddle = Enclosing . VMiddle;
	IN Math_Structure_view BEGIN
		Width: Enclosing . Width;
		END;		
	END;

   MALIGNGROUP:
	BEGIN
	CreateBefore(MALIGNGROUP_S);
	Visibility: 0;
	IN Math_Structure_view BEGIN
		Visibility: Enclosing =;
		Size: DOC_FONTSIZE;
		Font: Helvetica;
		END;		
	END;

   MALIGNMARK:
	BEGIN
	CreateBefore(MALIGNMARK_S);
	Visibility: 0;
	IN Math_Structure_view BEGIN
		Visibility: Enclosing =;
		Size: DOC_FONTSIZE;
		Font: Helvetica;
		END;		
	END;

   MTEXT:
	BEGIN
	CreateBefore(MTEXT_S);
	CreateWith(VerticalLine);
	VertPos: HRef = Previous not ElemWithAttr IntVertStretch . HRef;
	IN Math_Structure_view BEGIN
		Size: DOC_FONTSIZE;
		VertPos: Top =  Previous . Bottom;
		HorizPos: Left = Enclosing . Left + STRUCT_INDENT;
		Width: Enclosed . Width;
		END;
	END;

   MI:
	BEGIN
	CreateBefore(MI_S);
	CreateWith(VerticalLine);
	Style: Italics;
	VertPos: HRef = Previous not ElemWithAttr IntVertStretch . HRef;
	IN Math_Structure_view BEGIN
		Size: DOC_FONTSIZE;
		VertPos: Top =  Previous . Bottom;
		HorizPos: Left = Enclosing . Left + STRUCT_INDENT;
		Width: Enclosed . Width;
		Style: Enclosing =;
		END;
	END;

   MF:
	BEGIN
	CreateBefore(MO_S);
	CreateWith(VerticalLine);
	Height: 1;
	VertPos: HRef = Previous not ElemWithAttr IntVertStretch . HRef;
	IN Math_Structure_view BEGIN
		Size: DOC_FONTSIZE;
		VertPos: Top =  Previous . Bottom;
		Width: Enclosed . Width;
		END;
	END;

   MO:
	BEGIN
	CreateBefore(MO_S);
	CreateWith(VerticalLine);
	VertPos: HRef = Previous not ElemWithAttr IntVertStretch . HRef;
	IN Math_Structure_view BEGIN
		Size: DOC_FONTSIZE;
		VertPos: Top =  Previous . Bottom;
		HorizPos: Left = Enclosing . Left + STRUCT_INDENT;
		Width: Enclosed . Width;
		END;
	END;

   MN:
	BEGIN
	CreateBefore(MN_S);
	CreateWith(VerticalLine);
	VertPos: HRef = Previous not ElemWithAttr IntVertStretch . HRef;
	IN Math_Structure_view BEGIN
		Size: DOC_FONTSIZE;
		HorizPos: Left = Enclosing . Left + STRUCT_INDENT;
		VertPos: Top =  Previous . Bottom;
		Width: Enclosed . Width;
		END;
	END;

   MS:
	BEGIN
	CreateBefore(MS_S);
	CreateWith(VerticalLine);
	CreateFirst (OpeningQuote);
	CreateLast (ClosingQuote);
	VertPos: HRef = Previous not ElemWithAttr IntVertStretch . HRef;
	IN Math_Structure_view BEGIN
		Size: DOC_FONTSIZE;
		VertPos: Top =  Previous . Bottom;
		HorizPos: Left = Enclosing . Left + STRUCT_INDENT;
		Width: Enclosed . Width;
		END;
	END;

   C_Empty:
	IN Math_Structure_view
		Visibility: 0;

   SEP:
	BEGIN
	CreateBefore(SEP_S);
	Visibility: 0;
	IN Math_Structure_view BEGIN
		Visibility: Enclosing =;
		Size: DOC_FONTSIZE;
		Font: Helvetica;
		END;		
	END;

   MSPACE:
	BEGIN
	CreateBefore(MSPACE_S);
	VertPos: HRef = Previous not ElemWithAttr IntVertStretch . HRef;
	IN Math_Structure_view BEGIN
		Size: DOC_FONTSIZE;
		VertPos: Top =  Previous AnyBox . Bottom;
		Width: Enclosing . Width;
		END;
	END;

   MSTYLE:
	BEGIN
	CreateBefore(MSTYLE_S);
	CreateWith(VerticalLine);
        HorizRef: Enclosed . HRef;
	VertPos: HRef = Previous . HRef;
	IN Math_Structure_view BEGIN
		Size: DOC_FONTSIZE;
		Width: Enclosing . Width - STRUCT_INDENT;
		VertPos: Top =  Previous . Bottom;
		HorizPos: Left = Enclosing . Left + STRUCT_INDENT;
		Font: Helvetica;
		END;
  	END;

   MERROR:
	BEGIN
	CreateBefore(MERROR_S);
	CreateWith(VerticalLine);
	Foreground: Red;
        HorizRef: Enclosed . HRef;
	VertPos: HRef = Previous . HRef;
	IN Math_Structure_view BEGIN
		Foreground: Enclosing =;
		Size: DOC_FONTSIZE;
		Width: Enclosing . Width - STRUCT_INDENT;
		HorizPos: Left = Enclosing . Left + STRUCT_INDENT;
		VertPos: Top =  Previous . Bottom;
		Font: Helvetica;
		END;
  	END;

   MPADDED:
	BEGIN
	CreateBefore(MPADDED_S);
	CreateWith(VerticalLine);
        HorizRef: Enclosed . HRef;
	VertPos: HRef = Previous . HRef;
	IN Math_Structure_view BEGIN
		Foreground: Enclosing =;
		Size: DOC_FONTSIZE;
		Width: Enclosing . Width - STRUCT_INDENT;
		HorizPos: Left = Enclosing . Left + STRUCT_INDENT;
		Font: Helvetica;
		VertPos: Top =  Previous . Bottom;
		END;
  	END;

   MPHANTOM:
	BEGIN
	CreateBefore(MPHANTOM_S);
	CreateWith(VerticalLine);
	Foreground: White;	{****** should be Transparent ****}
        HorizRef: Enclosed . HRef;
	VertPos: HRef = Previous . HRef;
	IN Math_Structure_view BEGIN
		Foreground: Enclosing =;
		Size: DOC_FONTSIZE;
		Width: Enclosing . Width - STRUCT_INDENT;
		HorizPos: Left = Enclosing . Left + STRUCT_INDENT;
		VertPos: Top =  Previous . Bottom;
		Font: Helvetica;
		END;
  	END;

   MCHAR:
	BEGIN
	CreateBefore(MCHAR_S);
	VertPos: HRef = Previous not ElemWithAttr IntVertStretch . HRef;
	IN Math_Structure_view BEGIN
		Size: DOC_FONTSIZE;
		VertPos: Top =  Previous . Top;
		Width: 1 pt;
		END;
	END;

   MGLYPH:
	BEGIN
	CreateBefore(MGLYPH_S);
	VertPos: HRef = Previous not ElemWithAttr IntVertStretch . HRef;
	IN Math_Structure_view BEGIN
		Size: DOC_FONTSIZE;
		VertPos: Top =  Previous . Top;
		Width: 1 pt;
		END;
	END;

   MACTION:
	BEGIN
	CreateBefore(MACTION_S);
	CreateWith(VerticalLine);
        HorizRef: Enclosed . HRef;
	VertPos: HRef = Previous . HRef;
	IN Math_Structure_view BEGIN
		Foreground: Enclosing =;
		Size: DOC_FONTSIZE;
		Width: Enclosing . Width - STRUCT_INDENT;
		HorizPos: Left = Enclosing . Left + STRUCT_INDENT;
		Font: Helvetica;
		END;
  	END;

   SYMBOL_UNIT:
	BEGIN
	if within UnderOverBase
	   BEGIN
	   Height: Enclosed . Height;
	   HorizRef: * . HMiddle + 0.1;
	   END;
	if not within UnderOverBase
	   Height: Enclosing . Height;
	Width: Enclosed . Width;
	VertPos: Nil;
	HorizPos: Nil;
	IN Math_Structure_view BEGIN
		Size: DOC_FONTSIZE;
		Height: 1;
		HorizPos: Left = Enclosing . Left + STRUCT_INDENT;
		VertPos: Top = Previous . Bottom;
		END;
	END;

   GRAPHICS_UNIT:
	BEGIN
	Height: Enclosing . Height;
	Width: Enclosed . Width;
	VertPos: Nil;
	HorizPos: Nil;
	IN Math_Structure_view BEGIN
		Size: DOC_FONTSIZE;
		Height: 1;
		HorizPos: Left = Enclosing . Left + STRUCT_INDENT;
		VertPos: Top = Previous . Bottom;
		END;
	END;

   TEXT_UNIT:
	BEGIN
	VertRef: Enclosed . VRef;
	LineBreak: Yes;
	IF immediately within MF
	   VertPos: HMiddle = Enclosing . HMiddle;
	IN Math_Structure_view BEGIN
		IF immediately within MCHAR
		   Visibility: 0;
		IF immediately within MGLYPH
		   Visibility: 0;
		if NOT within XMLcomment_line
		   BEGIN
		   HorizPos: Left = Enclosing . Left;
		   VertPos: Top = Previous AnyBox . Bottom;
		   END;
		if within XMLcomment_line
		   HorizPos: Left = Previous . Right;
		Size: DOC_FONTSIZE;
		END;
	END;

ATTRIBUTES

  class:
	BEGIN
	CreateBefore(ATTR_class);
	CreateBefore(VALUE_class);
	END;

  style\240:
	BEGIN
	CreateBefore(ATTR_style);
	CreateBefore(VALUE_style);
	END;

  id:
	BEGIN
	CreateBefore(ATTR_id);
	CreateBefore(VALUE_id);
	END;

  xref:
	BEGIN
	CreateBefore(ATTR_xref);
	CreateBefore(VALUE_xref);
	END;

  other:
	BEGIN
	CreateBefore(ATTR_other);
	CreateBefore(VALUE_other);
	END;

  link = simple:
	CreateBefore(ATTR_link_simple);
  link = extended:
	CreateBefore(ATTR_link_extended);
  link = locator:
	CreateBefore(ATTR_link_locator);
  link = group:
	CreateBefore(ATTR_link_group);
  link = document:
	CreateBefore(ATTR_link_document);

  fontsize:
	BEGIN
	{ aspect set by function MathAttrFontsizeCreated }
	CreateBefore(ATTR_fontsize);
	CreateBefore(VALUE_fontsize);
	IN Math_Structure_view
		Size: Enclosing =;
	END;

  fontweight = normal_:
	BEGIN
	Weight: normal;
	CreateBefore(ATTR_fontweight_normal);
	IN Math_Structure_view
		Weight: Enclosing =;
	END;
  fontweight = bold_:
	BEGIN
	Weight: Bold;
	CreateBefore(ATTR_fontweight_bold);
	IN Math_Structure_view
		Weight: Enclosing =;
	END;

  fontstyle = normal_:
	BEGIN
	Style: roman;
	CreateBefore(ATTR_fontstyle_normal);
	IN Math_Structure_view
		Style: Enclosing =;
	END;
  fontstyle = italic:
	BEGIN
	Style: Italics;
	CreateBefore(ATTR_fontstyle_italic);
	IN Math_Structure_view
		Style: Enclosing =;
	END;

  fontfamily:
	BEGIN
	{ aspect set by function MathAttrFontfamilyCreated }
	CreateBefore(ATTR_fontfamily);
	CreateBefore(VALUE_fontfamily);
	IN Math_Structure_view
		Font: Enclosing =;
	END;

  color:
	BEGIN
	{ aspect set by function MathAttrColorCreated }
	CreateBefore(ATTR_color);
	CreateBefore(VALUE_color);
	IN Math_Structure_view
		Foreground: Enclosing =;
	END;

  form = prefix:
	CreateBefore(ATTR_form_prefix);
  form = infix:
	CreateBefore(ATTR_form_infix);
  form = postfix:
	CreateBefore(ATTR_form_postfix);
 
  fence = true:
	CreateBefore(ATTR_fence_true);
  fence = false:
	CreateBefore(ATTR_fence_false);

  separator = true:
	CreateBefore(ATTR_separator_true);
  separator = false:
	CreateBefore(ATTR_separator_false);
 
  lspace:
	BEGIN
	CreateBefore(ATTR_lspace);
	CreateBefore(VALUE_lspace);
	END;
 
  rspace:
	BEGIN
	CreateBefore(ATTR_rspace);
	CreateBefore(VALUE_rspace);
	END;

  stretchy = true:
	CreateBefore(ATTR_stretchy_true);
  stretchy = false:
	CreateBefore(ATTR_stretchy_false);
 
  symmetric = true:
	CreateBefore(ATTR_symmetric_true);
  symmetric = false:
	CreateBefore(ATTR_symmetric_false);
 
  maxsize:
	BEGIN
	CreateBefore(ATTR_maxsize);
	CreateBefore(VALUE_maxsize);
	END;
 
  minsize:
	BEGIN
	CreateBefore(ATTR_minsize);
	CreateBefore(VALUE_minsize);
	END;
 
  largeop = true:
	CreateBefore(ATTR_largeop_true);
  largeop = false:
	CreateBefore(ATTR_largeop_false);
 
  movablelimits = true:
	CreateBefore(ATTR_movablelimits_true);
  movablelimits = false:
	CreateBefore(ATTR_movablelimits_false);
 
  accent = true:
	CreateBefore(ATTR_accent_true);
  accent = false:
	CreateBefore(ATTR_accent_false);

  lquote:
	BEGIN
	CreateBefore(ATTR_lquote);
	CreateBefore(VALUE_lquote);
	END;

  rquote:
	BEGIN
	CreateBefore(ATTR_rquote);
	CreateBefore(VALUE_rquote);
	END;

  width\240:
	BEGIN
	CreateBefore(ATTR_width);
	CreateBefore(VALUE_width);
	END;

  height\240:
	BEGIN
	CreateBefore(ATTR_height);
	CreateBefore(VALUE_height);
	END;

  depth\240:
	BEGIN
	CreateBefore(ATTR_depth);
	CreateBefore(VALUE_depth);
	END;

  linethickness:
	BEGIN
	CreateBefore(ATTR_linethickness);
	CreateBefore(VALUE_linethickness);
	END;

  numalign (Numerator) = left\240:
	if not immediately within BeveledMFRAC
	   HorizPos: Left = Enclosing . Left;
  numalign (Numerator) = center\240:
	if not immediately within BeveledMFRAC
	   HorizPos: VMiddle = Bar . VMiddle;
  numalign (Numerator) = right\240:
	if not immediately within BeveledMFRAC
	   HorizPos: Right = Enclosing . Right;
  numalign = left\240:
	CreateBefore(ATTR_numalign_left);
  numalign = center\240:
	CreateBefore(ATTR_numalign_center);
  numalign = right\240:
	CreateBefore(ATTR_numalign_right);

  denomalign (Denominator) = left\240:
	if not immediately within BeveledMFRAC
	   HorizPos: Left = Enclosing . Left;
  denomalign (Denominator) = center\240:
	if not immediately within BeveledMFRAC
	   HorizPos: VMiddle = Bar . VMiddle;
  denomalign (Denominator) = right\240:
	if not immediately within BeveledMFRAC
	   HorizPos: Right = Enclosing . Right;
  denomalign = left\240:
	CreateBefore(ATTR_denomalign_left);
  denomalign = center\240:
	CreateBefore(ATTR_denomalign_center);
  denomalign = right\240:
	CreateBefore(ATTR_denomalign_right);

  beveled = true:
	CreateBefore(ATTR_beveled_true);
  beveled = false:
	CreateBefore(ATTR_beveled_false);

  notation = longdiv:
	BEGIN
	CreateBefore(ATTR_notation_longdiv);
	BorderTopWidth: 1 pt;
	BorderLeftWidth: 1 pt;
	BorderTopStyle: Solid;
	BorderLeftStyle: Solid;
	PaddingRight: 0;
	MarginRight: 0;
	PaddingLeft: 0.2;
	MarginLeft: 0.2;
	IN Math_Structure_view
		BEGIN
		BorderTopWidth: Enclosing =;
		BorderLeftWidth: Enclosing =;
		PaddingLeft: Enclosing =;
		MarginLeft: Enclosing =;
		END;
	END;
  notation = actuarial:
	BEGIN
	CreateBefore(ATTR_notation_actuarial);
	BorderTopWidth: 1 pt;
	BorderRightWidth: 1 pt;
	BorderLeftWidth: 0 pt;
	BorderTopStyle: Solid;
	BorderRightStyle: Solid;
	PaddingRight: 0.2;
	MarginRight: 0.2;
	PaddingLeft: 0;
	MarginLeft: 0;
	IN Math_Structure_view
		BEGIN
		BorderTopWidth: Enclosing =;
		BorderRightWidth: Enclosing =;
		PaddingRight: Enclosing =;
		MarginLeft: Enclosing =;
		END;
	END;
  notation = radical:
	BEGIN
	CreateBefore(ATTR_notation_radical);
	CreateBefore(RadicalSymbol);
	PaddingLeft: ROOT_OFFSET;
	VertPos: HRef = Previous not RadicalSymbol . HRef;
	HorizPos: Left = Previous not RadicalSymbol . Right;
	Gather: Yes;
	BorderTopWidth: 0;
	BorderLeftWidth: 0;
	MarginLeft: 0;
	IN Math_Structure_view
		BEGIN
		VertPos: Top = Previous . Bottom;
		HorizPos: Left = Enclosing . Left + STRUCT_INDENT;
		PaddingLeft: Enclosing =;
		END;
	END;

  scriptlevel:
	BEGIN
	CreateBefore(ATTR_scriptlevel);
	CreateBefore(VALUE_scriptlevel);
	END;

  scriptsizemultiplier:
	BEGIN
	CreateBefore(ATTR_scriptsizemultiplier);
	CreateBefore(VALUE_scriptsizemultiplier);
	END;

  scriptminsize:
	BEGIN
	CreateBefore(ATTR_scriptminsize);
	CreateBefore(VALUE_scriptminsize);
	END;

  background\240:
	BEGIN
	{ aspect set by function MathAttrBackgroundCreated }
	CreateBefore(ATTR_background);
	CreateBefore(VALUE_background);
	END;

  open:
	BEGIN
	CreateBefore(ATTR_open);
	CreateBefore(VALUE_open);
	END;

  close:
	BEGIN
	CreateBefore(ATTR_close);
	CreateBefore(VALUE_close);
	END;

  separators:
	BEGIN
	CreateBefore(ATTR_separators);
	CreateBefore(VALUE_separators);
	END;

  subscriptshift:
	BEGIN
	CreateBefore(ATTR_subscriptshift);
	CreateBefore(VALUE_subscriptshift);
	END;

  superscriptshift:
	BEGIN
	CreateBefore(ATTR_superscriptshift);
	CreateBefore(VALUE_superscriptshift);
	END;

  accentunder = true:
	CreateBefore(ATTR_accentunder_true);
  accentunder = false:
	CreateBefore(ATTR_accentunder_false);

  align:
	BEGIN
	CreateBefore(ATTR_align);
	CreateBefore(VALUE_align);
	END;

  rowalign:
	BEGIN
	CreateBefore(ATTR_rowalign);
	CreateBefore(VALUE_rowalign);
	END;

  columnalign:
	BEGIN
	CreateBefore(ATTR_columnalign);
	CreateBefore(VALUE_columnalign);
	END;

  groupalign:
	BEGIN
	CreateBefore(ATTR_groupalign);
	CreateBefore(VALUE_groupalign);
	END;

  alignmentscope:
	BEGIN
	CreateBefore(ATTR_alignmentscope);
	CreateBefore(VALUE_alignmentscope);
	END;

  columnwidth:
	BEGIN
	CreateBefore(ATTR_columnwidth);
	CreateBefore(VALUE_columnwidth);
	END;

  rowspacing:
	BEGIN
	CreateBefore(ATTR_rowspacing);
	CreateBefore(VALUE_rowspacing);
	END;

  columnspacing:
	BEGIN
	CreateBefore(ATTR_columnspacing);
	CreateBefore(VALUE_columnspacing);
	END;

  rowlines:
	BEGIN
	CreateBefore(ATTR_rowlines);
	CreateBefore(VALUE_rowlines);
	END;

  columnlines:
	BEGIN
	CreateBefore(ATTR_columnlines);
	CreateBefore(VALUE_columnlines);
	END;

  frame = none\240:
	CreateBefore(ATTR_frame_none);
  frame = solid\240:
	CreateBefore(ATTR_frame_solid);
  frame = dashed\240:
	CreateBefore(ATTR_frame_dashed);

  framespacing:
	BEGIN
	CreateBefore(ATTR_framespacing);
	CreateBefore(VALUE_framespacing);
	END;

  equalrows:
	BEGIN
	CreateBefore(ATTR_equalrows);
	CreateBefore(VALUE_equalrows);
	END;

  equalcolumns:
	BEGIN
	CreateBefore(ATTR_equalcolumns);
	CreateBefore(VALUE_equalcolumns);
	END;

  displaystyle = true:
	CreateBefore(ATTR_displaystyle_true);
  displaystyle = false:
	CreateBefore(ATTR_displaystyle_false);

  side = left\240:
	CreateBefore(ATTR_side_left);
  side = right\240:
	CreateBefore(ATTR_side_right);
  side = leftoverlap:
	CreateBefore(ATTR_side_leftoverlap);
  side = rightoverlap:
	CreateBefore(ATTR_side_rightoverlap);

  minlabelspacing:
	BEGIN
	CreateBefore(ATTR_minlabelspacing);
	CreateBefore(VALUE_minlabelspacing);
	END;

  name:
	BEGIN
	CreateBefore(ATTR_name);
	CreateBefore(VALUE_name);
	END;

  alt:
	BEGIN
	CreateBefore(ATTR_alt);
	CreateBefore(VALUE_alt);
	END;

  index:
	BEGIN
	CreateBefore(ATTR_index);
	CreateBefore(VALUE_index);
	END;

  actiontype:
	BEGIN
	CreateBefore(ATTR_actiontype);
	CreateBefore(VALUE_actiontype);
	END;

  selection:
	BEGIN
	CreateBefore(ATTR_selection);
	CreateBefore(VALUE_selection);
	END;

  rowspan\240:
	BEGIN
	CreateBefore(ATTR_rowspan);
	CreateBefore(VALUE_rowspan);
	END;

  columnspan:
	BEGIN
	CreateBefore(ATTR_columnspan);
	CreateBefore(VALUE_columnspan);
	END;

  edge = left\240:
	CreateBefore(ATTR_edge_left);
  edge = right\240:
	CreateBefore(ATTR_edge_right);

  EntityName:
	BEGIN
	CreateBefore(VALUE_EntityName);
	IN Math_Structure_view
		BEGIN
		Visibility: 1;
		VertPos: Top = Previous VALUE_EntityName . Bottom;
		END;
	END;

  IntPlaceholder:
	BEGIN
	Fillpattern: nopattern;
	Width: Enclosed . Width;
	END;

  IntFontstyle = IntNormal:
	BEGIN
	Style: roman;
	IN Math_Structure_view
		Style: Enclosing =;
	END;
  IntFontstyle = IntItalic:
	BEGIN
	Style: Italics;
	IN Math_Structure_view
		Style: Enclosing =;
	END;

  IntVertStretch:
	BEGIN
	if MO
		BEGIN
		Height: Next not Construct . Height;
		VertPos: Top = Next not Construct . Top;
		END;
	if MF
		BEGIN
		Height: Enclosing . Height;
		VertPos: Top =  Enclosing . Top;
		END;
	if MSUBSUP
		BEGIN
		Height: Next not Construct . Height + 1;
		VertPos: Top = Next not Construct . Top - 0.5;
		END;
	if MSUB
		BEGIN
		Height: Next not Construct . Height + 0.5;
		VertPos: Top = Next not Construct . Top;
		END;
	if MSUP
		BEGIN
		Height: Next not Construct . Height + 0.5;
		VertPos: Top = Next not Construct . Top - 0.5;
		END;
	if MUNDEROVER
		BEGIN
		Height: Next not Construct . Height + 1.6;
		VertPos: Top = Next not Construct . Top - 0.8;
		END;
	if MUNDER
		BEGIN
		Height: Next not Construct . Height + 0.8;
		VertPos: Top = Next not Construct . Top;
		END;
	if MOVER
		BEGIN
		Height: Next not Construct . Height + 0.8;
		VertPos: Top = Next not Construct . Top - 0.8;
		END;
	IN Math_Structure_view BEGIN
		Height: Enclosed . Height;
		VertPos: Top = Previous . Bottom;
		END;
	END;
  IntVertStretch (Base):
	BEGIN
	IF within MSUBSUP BEGIN
		Height: Enclosing . Height - 1;
		VertPos: Top = Enclosing . Top + 0.5;
		END;
	IF within MSUB BEGIN
		Height: Enclosing . Height - 0.5;
		VertPos: Top = Enclosing . Top;
		END;
	IF within MSUP BEGIN
		Height: Enclosing . Height - 0.5;
		VertPos: Top = Enclosing . Top + 0.5;
		END;
	IN Math_Structure_view BEGIN
		Height: Enclosed . Height;
		VertPos: Top = Enclosing . Top;
		END;
	END;
  IntVertStretch (UnderOverBase):
	BEGIN
	VertPos: Top = Overscript . Bottom;
	Height: Bottom = Underscript . Top;
	IN Math_Structure_view BEGIN
		Height: Enclosed . Height;
		VertPos: Top = Enclosing . Top;
		END;
	END;
  IntVertStretch (Overscript):
	BEGIN
	VertPos: Top = Enclosing . Top;
	IN Math_Structure_view
		VertPos: Top = Previous . Bottom;
	END;
  IntVertStretch (Underscript):
	BEGIN
	VertPos: Bottom = Enclosing . Bottom;	
	IN Math_Structure_view
		VertPos: Top = Previous . Bottom;
	END;
  IntVertStretch (MO):
	BEGIN
	IF immediately within UnderOverBase
		BEGIN
		Height: Enclosing . Height;
		VertPos: Top = Enclosing . Top;
		HorizRef: * . HMiddle + 0.3;
		END;
	IF immediately within Base
		BEGIN
		Height: Enclosing . Height;
		VertPos: Top = Enclosing . Top;
		HorizRef: * . HMiddle + 0.3;
		END;
	IN Math_Structure_view BEGIN
		Height: Enclosed . Height;
		VertPos: Top = Previous . Bottom;
		HorizRef: Enclosed . HRef;
		END;
	END;

  IntAddSpace = nospace:
	BEGIN
	PaddingLeft: 0;
	PaddingRight: 0;
	END;
  IntAddSpace = spacebefore:
	BEGIN
	PaddingLeft: OPERATOR_SPACE;
	PaddingRight: 0;
	IN Math_Structure_view
		PaddingLeft: 0;
	END;
  IntAddSpace = spaceafter:
	BEGIN
        PaddingLeft: 0;
        PaddingRight: OPERATOR_SPACE;
	IN Math_Structure_view
		PaddingRight: 0;
	END;
  IntAddSpace = both:
	BEGIN
	PaddingLeft: OPERATOR_SPACE;
	PaddingRight: OPERATOR_SPACE;
	IN Math_Structure_view
		BEGIN
		PaddingLeft: 0;
		PaddingRight: 0;
		END;
	END;

  IntHorizStretch:
	BEGIN
        Width: Enclosing . Width ;
	HorizPos: Left = Enclosing . Left;
	END;
  IntHorizStretch (MO):
	BEGIN
        Width: Enclosing . Width ;
	HorizPos: Left = Enclosing . Left;
	END;
  IntHorizStretch (SYMBOL_UNIT):
	BEGIN
	Height: Enclosed . Height;
	Width: Enclosing . Width;
	HorizPos: Left = Enclosing . Left;
	IN Math_Structure_view BEGIN
		HorizPos: Left = Previous . Right + 0.5;
		Height: 1;
		Width: 2;
		END;
	END;

  MRef_column:
	BEGIN
	Width: Referred . Width;
        HorizPos: Left = Referred . Left;
        IN Math_Structure_view BEGIN
                Width: Enclosing . Width - STRUCT_INDENT;
                HorizPos: Left = Enclosing . Left + STRUCT_INDENT;
                END;	
	END;

END
